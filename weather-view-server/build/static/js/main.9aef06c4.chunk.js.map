{"version":3,"sources":["components/WeatherDisplay.js","components/WeatherTable.js","api/open-weather-map.js","api/location.js","states/weather-actions.js","components/WeatherForm.js","containers/Weather.js","api/todos.js","states/todo-actions.js","components/TodoForm.js","components/TodoItem.js","components/TodoList.js","containers/Todos.js","containers/Main.js","states/weather-reducers.js","states/todo-reducers.js","index.js"],"names":["WeatherDisplay","react_default","a","createElement","className","concat","this","props","masking","src","group","alt","day","description","temp","toFixed","unit","React","Component","WeatherTable","_this$props","list","map","el","i","key","ts","weekDays","Date","getDay","code","maxTemp","minTemp","getWeatherGroup","currentWeatherBaseUrl","currentWeatherSource","axios","CancelToken","source","forecastBaseUrl","forecastSource","geoCodingBaseUrl","geoCodingSource","toggleForm","type","input","value","toggleTemp","selectUnit","getWeather","inputAddress","dispatch","getState","getLocation","checkInput","then","url","console","log","get","cancelToken","token","res","data","error_message","Error","status","pos","lat","results","geometry","location","lon","lng","address","formatted_address","catch","err","isCancel","error","message","searchAddressFromApi","addressInfo","setAddress","getCurrentWeather","cod","weather","id","main","getCurrentWeatherFromApi","endGetCurrentWeather","getForecast","Number","forecast","dt","max","min","shift","getForecastFromApi","endGetForecast","Promise","all","setUnit","resolve","reject","navigator","geolocation","getCurrentPosition","position","currentLocation","coords","latitude","longitude","getCurrentLocationFromApi","locationToAddressFromApi","WeatherForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFormToggle","handleInputChange","e","target","handleMetricUnit","handleImperialUnit","handleSubmit","preventDefault","inputEl","blur","inputValue","trim","submitAction","handleTempToggle","defaultUnit","_this2","_this$props2","formToggle","tempToggle","formCls","Form","onSubmit","Input","name","innerRef","onChange","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","color","getUnitString","DropdownMenu","DropdownItem","onClick","Button","outline","aria-hidden","connect","state","weatherForm","Weather","currentWeatherLoading","cancel","forecastLoading","document","body","querySelector","src_components_WeatherForm","WeatherDisplay_WeatherDisplay","assign","WeatherTable_WeatherTable","objectSpread","currentWeather","todoBaseUrl","listTodos","filterMode","arguments","length","undefined","createTodo","text","post","accomplishTodo","inputDanger","danger","loading","listTodosFromApi","todo","todos","endListTodos","removeTodo","delete","removeTodoFromApi","TodoForm","handlePost","createTodoFromApi","Alert","placeholder","todoForm","TodoItem","handleCheckboxCheck","accomplishTodoFromApi","handleRemove","doneTs","moment","calendar","TodoList","children","ListGroupItem","t","action","src_components_TodoItem","ListGroup","Todos","toggleAll","toggleActive","toggleComleted","todoLoading","ButtonGroup","size","src_components_TodoForm","src_components_TodoList","Main","src_containers_Weather","src_containers_Todos","initLocation","initCurrentWeatherState","NaN","initWeatherFormState","getInitForecastState","initTodoFormState","initTodoState","window","onload","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","ReactDOM","render","react_redux_es","src_containers_Main","getElementById"],"mappings":"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","file":"static/js/main.9aef06c4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './WeatherDisplay.css';\n\nexport default class WeatherDisplay extends React.Component {\n    static propTypes = {\n        masking: PropTypes.bool,\n        group: PropTypes.string,\n        description: PropTypes.string,\n        temp: PropTypes.number,\n        unit: PropTypes.string\n    };\n\n    render() {\n        return (\n            <div className={`weather-display ${this.props.masking ? 'masking' : ''}`}>\n                <img src={`images/w-${this.props.group}.png`} alt='' />\n                <p className='description'>{`${this.props.day}: ${this.props.description}`}</p>\n                <h1 className='temp'>\n                    <span className='display-3'>{this.props.temp.toFixed(0)}&ordm;</span>\n                    &nbsp;{(this.props.unit === 'metric') ? 'C' : 'F'}\n                </h1>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './WeatherTable.css';\n\nexport default class WeatherTable extends React.Component {\n    static propTypes = {\n        masking: PropTypes.bool,\n        unit: PropTypes.string,\n        list: PropTypes.array\n    };\n\n    static weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    render() {\n        const { masking, list } = this.props;\n\n        return (\n            <div className={`weather-table ${masking ? 'masking' : ''}`}>\n                <div className='d-flex justify-content-around'>{\n                    list.map((el, i) => (\n                        <div key={el.ts} className={i > 2 ? 'hidden-xs-down' : ''}>\n                            <div className='day'>{\n                                WeatherTable.weekDays[(new Date(el.ts * 1000)).getDay()]\n                            }</div>\n                            <i className={`owf owf-${el.code}`}></i>\n                            <span className='weather'>\n                                <span className='max-temp'>{el.maxTemp.toFixed(0)}&ordm;</span>\n                                <span className='min-temp'>{el.minTemp.toFixed(0)}&ordm;</span>\n                            </span>\n                        </div>\n                    ))\n                }</div>\n            </div>\n        );\n    }\n}\n","import axios from 'axios';\n\nconst key = '36978c6550efee0e27e50850cc57adda';\n\nexport const getWeatherGroup = (code) => {\n    let group = 'na';\n    if (200 <= code && code < 300) {\n        group = 'thunderstorm';\n    } else if (300 <= code && code < 400) {\n        group = 'drizzle';\n    } else if (500 <= code && code < 600) {\n        group = 'rain';\n    } else if (600 <= code && code < 700) {\n        group = 'snow';\n    } else if (700 <= code && code < 800) {\n        group = 'atmosphere';\n    } else if (800 === code) {\n        group = 'clear';\n    } else if (801 <= code && code < 900) {\n        group = 'clouds';\n    }\n    return group;\n}\n\nexport const capitalize = (string) => {\n    return string.replace(/\\b\\w/g, l => l.toUpperCase());\n}\n\n\n\n\nconst currentWeatherBaseUrl = `http://api.openweathermap.org/data/2.5/weather?appid=${key}`;\nlet currentWeatherSource = axios.CancelToken.source();\n\nexport const getCurrentWeather = (pos, unit) => {\n    var url = `${currentWeatherBaseUrl}&lat=${pos.lat}&lon=${pos.lon}&units=${unit}`;\n\n    console.log(`Making request to: ${url}`);\n\n    return axios.get(url, { cancelToken: currentWeatherSource.token }).then(function (res) {\n        if (res.data.cod && res.data.message)\n            throw new Error(res.data.message);\n\n        return {\n            code: res.data.weather[0].id,\n            group: getWeatherGroup(res.data.weather[0].id),\n            description: res.data.weather[0].description,\n            temp: res.data.main.temp,\n            unit: unit\n        };\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport function cancelCurrntWeather() {\n    currentWeatherSource.cancel('Current weather request canceled');\n}\n\n\n\n\nconst forecastBaseUrl = `http://api.openweathermap.org/data/2.5/forecast/daily?appid=${key}&cnt=6`;\nlet forecastSource = axios.CancelToken.source();\n\nexport const getForecast = (pos, unit) => {\n    var url = `${forecastBaseUrl}&lat=${pos.lat}&lon=${pos.lon}&units=${unit}`;\n\n    console.log(`Making request to: ${url}`);\n\n    return axios.get(url, { cancelToken: forecastSource.token }).then(function (res) {\n        if (Number(res.data.cod) !== 200)\n            throw new Error(res.data.message);\n\n        const list = res.data.list.map(forecast => {\n            return {\n                ts: forecast.dt,\n                code: forecast.weather[0].id,\n                group: getWeatherGroup(forecast.weather[0].id),\n                description: forecast.weather[0].main,\n                maxTemp: forecast.temp.max,\n                minTemp: forecast.temp.min,\n            };\n        });\n        list.shift(); // remove today\n\n        return {\n            unit: unit,\n            list\n        };\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport const cancelForecast = () => {\n    forecastSource.cancel('Forecast request canceled');\n}\n","import axios from 'axios';\n\nconst key = 'AIzaSyDrQpacyuBhAAB5TFobrhKWyk7rugcEOfw';\n\nconst geoCodingBaseUrl = `https://maps.googleapis.com/maps/api/geocode/json?key=${key}`;\nlet geoCodingSource = axios.CancelToken.source();\n\nexport const locationToAddress = (pos) => {\n    let url = `${geoCodingBaseUrl}&latlng=${pos.lat},${pos.lon}&result_type=administrative_area_level_3`;\n\n    console.log(`Making request to ${url}`);\n\n    return axios.get(url, { cancelToken: geoCodingSource.token }).then(function (res) {\n        if (res.data.error_message)\n            throw new Error(res.data.error_message);\n\n        return res.data.results[0].formatted_address;\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport const searchAddress = (inputAddress) => {\n    let url = `${geoCodingBaseUrl}&address=${inputAddress}`;\n\n    console.log(`Making request to ${url}`);\n\n    return axios.get(url, { cancelToken: geoCodingSource.token }).then(function (res) {\n        if (res.data.error_message)\n            throw new Error(res.data.error_message);\n\n        if (res.data.status === \"ZERO_RESULTS\")\n            throw new Error(`There's no result for ${inputAddress}`);\n\n        return {\n            pos: {\n                lat: res.data.results[0].geometry.location.lat,\n                lon: res.data.results[0].geometry.location.lng,\n            },\n            address: res.data.results[0].formatted_address,\n        };\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport const getCurrentLocation = (getState) => {\n\n    return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const currentLocation = {\n                lat: position.coords.latitude,\n                lon: position.coords.longitude\n            };\n            resolve(currentLocation);\n        }, () => {\n            resolve(getState().location);\n        });\n    });\n}","import {\n    getCurrentWeather as getCurrentWeatherFromApi,\n    getForecast as getForecastFromApi,\n} from '../api/open-weather-map.js';\n\nimport {\n    getCurrentLocation as getCurrentLocationFromApi,\n    locationToAddress as locationToAddressFromApi,\n    searchAddress as searchAddressFromApi\n} from '../api/location'\n\n\n/* Unit */\n\nconst setUnit = (unit) => {\n    return {\n        type: '@UNIT/SET_UNIT',\n        unit: unit\n    };\n}\n\n/* Address */\n\nconst setAddress = (address) => {\n    return {\n        type: '@ADDRESS/SET_ADDRESS',\n        address: address\n    }\n}\n\n/* Location */\n\nconst setLocation = (location) => {\n    return {\n        type: '@LOACTION/SET_LOCATION',\n        location: location\n    }\n}\n\n/* Masking */\n\nconst maskBg = () => {\n    return {\n        type: '@MASKING/MASK_BG'\n    }\n}\n\nconst unmaskBg = () => {\n    return {\n        type: '@MASKING/UNMASK_BG'\n    }\n}\n\n/* Current Weather */\n\nconst startGetCurrentWeather = () => {\n    return {\n        type: '@CURRENT_WEATHER/START_GET_CURRENT_WEATHER',\n    };\n}\n\nconst endGetCurrentWeather = (code, group, description, temp) => {\n    return {\n        type: '@CURRENT_WEATHER/END_GET_CURRENT_WEATHER',\n        code,\n        group,\n        description,\n        temp,\n    };\n}\n\nconst resetCurrentWeather = () => {\n    return {\n        type: '@CURRENT_WEATHER/RESET_CURRENT_WEATHER'\n    };\n}\n\n\n/* WeatherForm */\n\nexport const toggleForm = () => {\n    return {\n        type: '@WEATHER_FORM/TOGGLE_FORM'\n    };\n}\n\nexport const input = (value) => {\n    return {\n        type: '@WEATHER_FORM/INPUT',\n        value\n    };\n}\n\nexport const toggleTemp = () => {\n    return {\n        type: '@WEATHER_FORM/TOGGLE_TEMP'\n    };\n}\n\nexport const selectUnit = (unit) => {\n    return {\n        type: '@WEATHER_FORM/SELECT_UNIT',\n        unit\n    };\n}\n\n/* Forecast */\n\nconst startGetForecast = () => {\n    return {\n        type: '@FORECAST/START_GET_FORECAST',\n    };\n}\n\nconst endGetForecast = (list) => {\n    return {\n        type: '@FORECAST/END_GET_FORECAST',\n        list\n    };\n}\n\nconst resetForecast = () => {\n    return {\n        type: '@FORECAST/RESET_FORECAST'\n    };\n}\n\n\n\n/* Weather */\n\nexport const getWeather = (inputAddress, unit) => {\n    return (dispatch, getState) => {\n\n        dispatch(maskBg());\n\n        const getLocation = checkInput(inputAddress, getState).then(inputAddress => {\n            return searchAddressFromApi(inputAddress);\n        }).then(addressInfo => {\n            const { pos, address } = addressInfo;\n            dispatch(setAddress(address));\n            dispatch(setLocation(pos));\n            return pos;\n        });\n\n        const getCurrentWeather = getLocation.then(pos => {\n            dispatch(startGetCurrentWeather());\n            return getCurrentWeatherFromApi(pos, unit);\n        }).then(weather => {\n            const { code, group, description, temp } = weather;\n            dispatch(endGetCurrentWeather(code, group, description, temp));\n        }).catch(err => {\n            console.error('Error getting current weather', err);\n            dispatch(resetCurrentWeather());\n            dispatch(unmaskBg());\n        });\n\n        const getForecast = getLocation.then(pos => {\n            dispatch(startGetForecast());\n            return getForecastFromApi(pos, unit);\n        }).then(forecast => {\n            const { list } = forecast;\n            dispatch(endGetForecast(list));\n        }).catch(err => {\n            console.error('Error getting forecast', err);\n            dispatch(resetForecast());\n            dispatch(unmaskBg());\n        });\n\n        return Promise.all([getCurrentWeather, getForecast]).then(() => {\n            dispatch(setUnit(unit));\n            dispatch(unmaskBg());\n        });\n    }\n}\n\nconst checkInput = (inputAddress, getState) => {\n    return new Promise((resolve, reject) => {\n        let hasAddress = inputAddress !== '' ? true : false;\n\n        if (!hasAddress) {\n            getCurrentLocationFromApi(getState).then(currentLocation => {\n                return locationToAddressFromApi(currentLocation);\n            }).then(address => {\n                resolve(address);\n            });\n        }\n        else\n            resolve(inputAddress);\n    });\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Form,\n    Input,\n    Button,\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { toggleForm, input, toggleTemp, selectUnit } from '../states/weather-actions.js';\n\nimport './WeatherForm.css';\n\nclass WeatherForm extends React.Component {\n    static propTypes = {\n        inputValue: PropTypes.string,\n        formToggle: PropTypes.bool,\n        tempToggle: PropTypes.bool,\n        unit: PropTypes.string,\n        address: PropTypes.string,\n        defaultUnit: PropTypes.string,\n        submitAction: PropTypes.func,\n        dispatch: PropTypes.func\n    };\n\n    static getUnitString(unit) {\n        return unit === 'metric' ? 'C' : 'F';\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.inputEl = null;\n    }\n\n    componentDidMount() {\n        this.props.dispatch(selectUnit(this.props.defaultUnit));\n    }\n\n    render() {\n        const { inputValue, formToggle, tempToggle, unit, address } = this.props;\n        const formCls = formToggle ? 'form' : '';\n\n        return (\n            <div className={`weather-form ${formCls}`}>{formToggle ?\n                <Form className='form-inline justify-content-center' onSubmit={this.handleSubmit}>\n                    <Input type='text' name='address' innerRef={el => { this.inputEl = el }} value={inputValue} onChange={this.handleInputChange}></Input>&nbsp;\n                    <ButtonDropdown type='buttom' isOpen={tempToggle} toggle={this.handleTempToggle}>\n                        <DropdownToggle type='button' caret color=\"secondary\">\n                            &ordm; {WeatherForm.getUnitString(unit)}\n                        </DropdownToggle>\n                        <DropdownMenu>\n                            <DropdownItem type='button' onClick={this.handleMetricUnit}>&ordm; C</DropdownItem>\n                            <DropdownItem type='button' onClick={this.handleImperialUnit}>&ordm; F</DropdownItem>\n                        </DropdownMenu>\n                    </ButtonDropdown>&nbsp;\n                    <Button color=\"info\">Check</Button>\n                </Form> :\n                <Button className='btn-form' outline color=\"light\" onClick={this.handleFormToggle}><i className='fa fa-map-marker' aria-hidden=\"true\"></i>&nbsp;&nbsp;{address}</Button>\n            }</div>\n        );\n    }\n\n    handleFormToggle = () => {\n        this.props.dispatch(toggleForm());\n    }\n\n    handleInputChange = (e) => {\n        this.props.dispatch(input(e.target.value));\n    }\n\n    handleMetricUnit = (e) => {\n        this.props.dispatch(selectUnit('metric'));\n    }\n\n    handleImperialUnit = (e) => {\n        this.props.dispatch(selectUnit('imperial'));\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.inputEl.blur();\n        const { inputValue, address, unit, dispatch } = this.props;\n        if (inputValue && inputValue.trim()) {\n            dispatch(this.props.submitAction(inputValue, unit));\n            this.handleFormToggle();\n        } else {\n            dispatch(input(address));\n        }\n    }\n\n    handleTempToggle = (e) => {\n        this.props.dispatch(toggleTemp());\n    }\n}\n\nexport default connect(state => state.weatherForm)(WeatherForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport WeatherDisplay from '../components/WeatherDisplay';\nimport WeatherTable from '../components/WeatherTable';\nimport WeatherForm from '../components/WeatherForm';\nimport { getWeather } from '../states/weather-actions';\nimport { cancelCurrntWeather, cancelForecast } from '../api/open-weather-map.js';\n\nimport './Weather.css';\n\nclass Weather extends React.Component {\n    static propTypes = {\n        inputValue: PropTypes.string,\n        address: PropTypes.string,\n        unit: PropTypes.string,\n        masking: PropTypes.bool,\n        dispatch: PropTypes.func,\n\n        list: PropTypes.array,\n        forecastLoading: PropTypes.bool,\n\n        code: PropTypes.number,\n        group: PropTypes.string,\n        description: PropTypes.string,\n        temp: PropTypes.number,\n        currentWeatherLoading: PropTypes.bool,\n    };\n\n    componentDidMount() {\n        this.props.dispatch(getWeather(this.props.inputValue, this.props.unit));\n    }\n\n    componentWillUnmount() {\n        if (this.props.currentWeatherLoading) {\n            cancelCurrntWeather();\n        };\n\n        if (this.props.forecastLoading) {\n            cancelForecast();\n        };\n    }\n\n    render() {\n        const { address, group, description, temp, list, unit, masking } = this.props;\n        const forecast = list;\n\n        document.body.className = `weather-bg ${group}`;\n        document.querySelector('.weather-bg .mask').className = `mask ${masking ? 'masking' : ''}`;\n\n        return (\n            <div className='weather'>\n                <div className='current'>\n                    <WeatherForm address={address} defaultUnit={unit} submitAction={getWeather} />\n                    <WeatherDisplay {...{ group, description, temp, unit, masking }} day='today' />\n                </div>\n                <div className='forecast'>\n                    <WeatherTable list={forecast} unit={unit} masking={masking} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({\n    ...state.currentWeather,\n    ...state.forecast,\n    inputValue: state.weatherForm.inputValue,\n    unit: state.unit,\n    address: state.address,\n    masking: state.masking,\n}))(Weather);\n","import axios from 'axios';\n\nconst todoBaseUrl = 'http://localhost:3000/api/todos';\n\nexport const listTodos = (filterMode = 'all') => {\n    let url = `${todoBaseUrl}?mode=`;\n\n    if (filterMode === 'active')\n        url += 'active';\n    else if (filterMode === 'completed')\n        url += 'completed';\n    else\n        url += 'all';\n\n    console.log(`Making GET request to: ${url}`);\n\n    return axios.get(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\n\nexport const createTodo = (text) => {\n    let url = todoBaseUrl;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url, { text }).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\n\nexport const accomplishTodo = (id) => {\n    let url = `${todoBaseUrl}/${id}`;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\n\nexport const removeTodo = (id) => {\n    let url = `${todoBaseUrl}/${id}`;\n\n    console.log(`Making DELETE request to: ${url}`);\n\n    return axios.delete(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n","import {\n    listTodos as listTodosFromApi,\n    createTodo as createTodoFromApi,\n    accomplishTodo as accomplishTodoFromApi,\n    removeTodo as removeTodoFromApi\n} from '../api/todos.js';\n\n/*  Todo Form */\n\nexport function input(value) {\n    return {\n        type: '@TODO_FORM/INPUT',\n        value\n    };\n};\n\nexport function inputDanger(danger) {\n    return {\n        type: '@TODO_FORM/INPUT_DANGER',\n        danger\n    };\n};\n\n\n/*  Todos */\n\nfunction startLoading() {\n    return {\n        type: '@TODO/START_LOADING'\n    };\n}\n\nfunction endLoading() {\n    return {\n        type: '@TODO/END_LOADING'\n    };\n}\n\nfunction endListTodos(todos) {\n    return {\n        type: '@TODO/END_LIST_TODOS',\n        todos\n    };\n}\n\nexport function listTodos(loading = false) {\n    return (dispatch, getState) => {\n        if (!loading)\n            dispatch(startLoading());\n\n        return listTodosFromApi(getState().todo.filterMode).then(todos => {\n            dispatch(endListTodos(todos));\n        }).catch(err => {\n            console.error('Error listing todos', err);\n        }).then(() => {\n            dispatch(endLoading());\n        });\n    }\n}\n\nexport function createTodo(text) {\n    return (dispatch) => {\n        dispatch(startLoading());\n\n        return createTodoFromApi(text).then(() => {\n            dispatch(listTodos(true));\n        }).catch(err => {\n            console.error('Error creating todos', err);\n        });\n    };\n};\n\nexport function accomplishTodo(id) {\n    return (dispatch) => {\n        dispatch(startLoading(true));\n\n        return accomplishTodoFromApi(id).then(() => {\n            dispatch(listTodos(true));\n        }).catch(err => {\n            console.error('Error accomplishing todos', err);\n        });\n    }\n}\n\nexport const removeTodo = (id) => {\n    return (dispatch) => {\n        dispatch(startLoading(true));\n\n        return removeTodoFromApi(id).then(() => {\n            dispatch(listTodos(true));\n        }).catch(err => {\n            console.error('Error removing todos', err);\n        });\n    }\n}\n\nfunction toggleAll() {\n    return {\n        type: '@TODO/TOGGLE_ALL'\n    };\n}\n\nexport function toggleAllAndList() {\n    return (dispatch) => {\n        dispatch(toggleAll());\n        return dispatch(listTodos());\n    }\n}\n\nfunction toggleActive() {\n    return {\n        type: '@TODO/TOGGLE_ACTIVE'\n    };\n}\n\nexport function toggleActiveAndList() {\n    return (dispatch) => {\n        dispatch(toggleActive());\n        return dispatch(listTodos());\n    }\n}\n\nfunction toggleComleted() {\n    return {\n        type: '@TODO/TOGGLE_COMPLETED'\n    };\n}\n\nexport function toggleComletedAndList() {\n    return (dispatch) => {\n        dispatch(toggleComleted());\n        return dispatch(listTodos());\n    }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Alert,\n    Input,\n    Button,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { createTodo, input, inputDanger } from '../states/todo-actions.js';\n\nimport './TodoForm.css';\n\nclass TodoForm extends React.Component {\n    static propTypes = {\n        inputValue: PropTypes.string,\n        inputDanger: PropTypes.bool,\n        dispatch: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.inputEl = null;\n    }\n\n    render() {\n        const { inputValue } = this.props;\n        const inputDanger = this.props.inputDanger ? 'has-danger' : '';\n\n        return (\n            <div className='post-form'>\n                <Alert color='info' className={`d-flex flex-column flex-sm-row justify-content-center ${inputDanger}`}>\n                    <Input className='input' type='textarea' innerRef={el => { this.inputEl = el }} value={inputValue} onChange={this.handleInputChange} placeholder=\"What's next to do?\"></Input>\n                    <Button className='btn-post align-self-end' color=\"info\" onClick={this.handlePost}>Add</Button>\n                </Alert>\n            </div>\n        );\n    }\n\n    handleInputChange = (e) => {\n        const text = e.target.value\n        this.props.dispatch(input(text));\n        if (text && this.props.inputDanger) {\n            this.props.dispatch(inputDanger(false));\n        }\n    }\n\n    handlePost = () => {\n        const { inputValue, dispatch } = this.props;\n\n        if (!inputValue) {\n            dispatch(inputDanger(true));\n            return;\n        }\n\n        dispatch(createTodo(inputValue));\n        dispatch(input(''));\n    }\n}\n\nexport default connect(state => ({\n    ...state.todoForm\n}))(TodoForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { accomplishTodo, removeTodo } from '../states/todo-actions';\n\nimport './TodoItem.css';\n\nclass TodoItem extends React.Component {\n    static propTypes = {\n        id: PropTypes.string,\n        text: PropTypes.string,\n        ts: PropTypes.number,\n        doneTs: PropTypes.number,\n        dispatch: PropTypes.func\n    };\n\n    render() {\n        const { text, ts, doneTs } = this.props;\n\n        return (\n            <div className={'todo-item d-flex flex-row ' + (doneTs ? 'done' : 'undone')}>\n                <div className='remove' onClick={this.handleRemove}>\n                    <i className=\"far fa-times-circle\"></i>\n                </div>\n                <div className='todo d-flex flex-column' onClick={this.handleCheckboxCheck}>\n                    <div className='wrap'>\n                        <div className='ts'>{'Created: ' + moment(ts * 1000).calendar()}</div>\n                        <div className='text'>{text}</div>\n                    </div>\n                    <div className='check d-flex justify-content-end align-items-center'>\n                        <div className='done-ts'>{\n                            !!doneTs &&\n                            <span>{moment(doneTs * 1000).calendar()}</span>\n                        }</div>\n                        <div className='checkbox'>\n                            <i className={'far ' + (doneTs ? 'fa-check-square' : 'fa-square')}></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    handleCheckboxCheck = (e) => {\n        this.props.dispatch(accomplishTodo(this.props.id));\n\n    }\n\n    handleRemove = (e) => {\n        this.props.dispatch(removeTodo(this.props.id));\n    }\n}\n\nexport default connect()(TodoItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    ListGroup,\n    ListGroupItem\n} from 'reactstrap';\n\nimport TodoItem from './TodoItem';\nimport './TodoList.css';\n\nclass TodoList extends React.Component {\n    static propTypes = {\n        todos: PropTypes.array,\n    };\n\n    render() {\n        const { todos } = this.props;\n\n        let children = (\n            <ListGroupItem className='empty d-flex justify-content-center align-items-center'>\n                <div className='empty-text'>There are no other todos.</div>\n            </ListGroupItem>\n        );\n        if (todos.length) {\n            children = todos.map(t => (\n                <ListGroupItem key={t.id} action={true}>\n                    <TodoItem {...t} />\n                </ListGroupItem>\n            ));\n        }\n\n        return (\n            <div className='todo-list'>\n                <ListGroup>{children}</ListGroup>\n            </div>\n        );\n    }\n}\n\nexport default connect()(TodoList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, ButtonGroup } from 'reactstrap';\n\nimport TodoForm from '../components/TodoForm';\nimport TodoList from '../components/TodoList';\n\nimport {\n    listTodos,\n    toggleAllAndList,\n    toggleActiveAndList,\n    toggleComletedAndList\n} from '../states/todo-actions.js';\n\nimport './Todos.css';\n\nclass Todos extends React.Component {\n    static propTypes = {\n        todoLoading: PropTypes.bool,\n        todos: PropTypes.array,\n        filterMode: PropTypes.string,\n        dispatch: PropTypes.func,\n    };\n\n    componentDidMount() {\n        this.props.dispatch(listTodos());\n    }\n\n    render() {\n        const { todoLoading, todos, filterMode } = this.props;\n\n        return (\n            <div className='todos d-flex flex-column'>\n                <div className='label d-flex justify-content-between align-items-end'>\n                    <h4><i className='fa fa-tags' aria-hidden=\"true\"></i>&nbsp;&nbsp;TODOS</h4>\n                    <ButtonGroup size='sm'>\n                        <Button outline={filterMode === 'all' ? false : true} color='light' onClick={this.toggleAll}>All</Button>\n                        <Button outline={filterMode === 'active' ? false : true} color='light' onClick={this.toggleActive}>Active</Button>\n                        <Button outline={filterMode === 'completed' ? false : true} color='light' onClick={this.toggleComleted}>Completed</Button>\n                    </ButtonGroup>\n                </div>\n                <TodoForm />\n                <TodoList todos={todos} />{\n                    todoLoading &&\n                    <i className=\"fas fa-spinner fa-spin loading\"></i>\n                }\n            </div>\n        );\n    }\n\n    toggleAll = () => {\n        this.props.dispatch(toggleAllAndList());\n    }\n\n    toggleActive = () => {\n        this.props.dispatch(toggleActiveAndList());\n    }\n\n    toggleComleted = () => {\n        this.props.dispatch(toggleComletedAndList());\n    }\n}\n\nexport default connect(state => ({\n    ...state.todo,\n}))(Todos);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Weather from './Weather';\nimport Todos from './Todos';\n\nimport './Main.css';\n\nclass Main extends React.Component {\n    static propTypes = {\n        store: PropTypes.object,\n        dispatch: PropTypes.func\n    };\n\n    render() {\n        return (\n            <div className='main'>\n                <Weather />\n                <Todos />\n            </div>\n        );\n    }\n}\n\nexport default connect()(Main);\n","const initUnitState = 'metric';\n\nexport const unit = (state = initUnitState, action) => {\n    switch (action.type) {\n        case '@UNIT/SET_UNIT':\n            return action.unit;\n        default:\n            return state;\n    }\n}\n\nconst initAddress = '';\n\nexport const address = (state = initAddress, action) => {\n    switch (action.type) {\n        case '@ADDRESS/SET_ADDRESS':\n            return action.address;\n        default:\n            return state;\n    }\n}\n\n\nconst initLocation = {\n    lat: 25.0173405,\n    lon: 121.5397518\n};\n\nexport const location = (state = initLocation, action) => {\n    switch (action.type) {\n        case '@LOACTION/SET_LOCATION':\n            return action.location;\n        default:\n            return state;\n    }\n}\n\n\nconst initMaskingState = false;\n\nexport const masking = (state = initMaskingState, action) => {\n    switch (action.type) {\n        case '@MASKING/MASK_BG':\n            return true;\n        case '@MASKING/UNMASK_BG':\n            return false;\n        default:\n            return state;\n    }\n}\n\n\nconst initCurrentWeatherState = {\n    code: -1,\n    group: 'na',\n    description: 'N/A',\n    temp: NaN,\n    currentWeatherLoading: false,\n};\n\nexport const currentWeather = (state = initCurrentWeatherState, action) => {\n    switch (action.type) {\n        case '@CURRENT_WEATHER/START_GET_CURRENT_WEATHER':\n            return {\n                ...state,\n                currentWeatherLoading: true\n            };\n        case '@CURRENT_WEATHER/END_GET_CURRENT_WEATHER':\n            return {\n                ...state,\n                code: action.code,\n                group: action.group,\n                description: action.description,\n                temp: action.temp,\n                currentWeatherLoading: false\n            };\n        case '@CURRENT_WEATHER/RESET_CURRENT_WEATHER':\n            return {\n                ...initCurrentWeatherState,\n            };\n        default:\n            return state;\n    }\n}\n\nconst initWeatherFormState = {\n    inputValue: '',\n    formToggle: false,\n    tempToggle: false,\n    unit: null,\n};\n\nexport const weatherForm = (state = initWeatherFormState, action) => {\n    switch (action.type) {\n        case '@WEATHER_FORM/TOGGLE_FORM':\n            return {\n                ...state,\n                formToggle: !state.formToggle\n            };\n        case '@WEATHER_FORM/INPUT':\n            return {\n                ...state,\n                inputValue: action.value\n            };\n        case '@WEATHER_FORM/TOGGLE_TEMP':\n            return {\n                ...state,\n                tempToggle: !state.tempToggle\n            };\n        case '@WEATHER_FORM/SELECT_UNIT':\n            return {\n                ...state,\n                unit: action.unit\n            };\n        default:\n            return state;\n    }\n}\n\nconst getInitForecastState = () => {\n    let list = [];\n    for (let i = 0; i < 5; i++) {\n        list[i] = {\n            ts: -i,\n            code: -1,\n            group: 'na',\n            description: 'N/A',\n            maxTemp: NaN,\n            minTemp: NaN,\n        };\n    }\n    return {\n        list,\n        forecastLoading: false,\n    };\n}\n\nexport const forecast = (state = getInitForecastState(), action) => {\n    switch (action.type) {\n        case '@FORECAST/START_GET_FORECAST':\n            return {\n                ...state,\n                forecastLoading: true\n            };\n        case '@FORECAST/END_GET_FORECAST':\n            return {\n                ...state,\n                list: action.list,\n                forecastLoading: false\n            };\n        case '@FORECAST/RESET_FORECAST':\n            return {\n                ...getInitForecastState(),\n            };\n        default:\n            return state;\n    }\n}\n\n","/* Todo Form */\n\nconst initTodoFormState = {\n    inputValue: '',\n    inputDanger: false,\n};\nexport function todoForm(state = initTodoFormState, action) {\n    switch (action.type) {\n        case '@TODO_FORM/INPUT':\n            return {\n                ...state,\n                inputValue: action.value\n            };\n        case '@TODO_FORM/INPUT_DANGER':\n            return {\n                ...state,\n                inputDanger: action.danger\n            };\n        default:\n            return state;\n    }\n}\n\n/* Todos */\n\nconst initTodoState = {\n    todoLoading: false,\n    todos: [],\n    filterMode: 'all',\n};\nexport function todo(state = initTodoState, action) {\n    switch (action.type) {\n        case '@TODO/START_LOADING':\n            return {\n                ...state,\n                todoLoading: true\n            };\n        case '@TODO/END_LOADING':\n            return {\n                ...state,\n                todoLoading: false\n            };\n        case '@TODO/END_LIST_TODOS':\n            return {\n                ...state,\n                todos: action.todos\n            };\n        case '@TODO/TOGGLE_ALL':\n            return {\n                ...state,\n                filterMode: 'all',\n            };\n        case '@TODO/TOGGLE_ACTIVE':\n            return {\n                ...state,\n                filterMode: 'active',\n            };\n        case '@TODO/TOGGLE_COMPLETED':\n            return {\n                ...state,\n                filterMode: 'completed',\n            };\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport Main from './containers/Main';\nimport { unit, address, location, masking, currentWeather, weatherForm, forecast } from './states/weather-reducers';\nimport { todoForm, todo } from './states/todo-reducers';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nwindow.onload = function () {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const store = createStore(combineReducers({\n        unit, address, location, masking,\n        currentWeather, weatherForm, forecast,\n        todoForm, todo,\n    }), composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <Main />\n        </Provider>,\n        document.getElementById('root')\n    );\n};\n"],"sourceRoot":""}