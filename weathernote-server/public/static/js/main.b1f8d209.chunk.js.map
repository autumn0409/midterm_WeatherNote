{"version":3,"sources":["components/WeatherDisplay.js","components/WeatherTable.js","api/open-weather-map.js","api/location.js","states/weather-actions.js","components/WeatherForm.js","containers/Weather.js","api/todos.js","api/projects.js","states/todo-actions.js","components/ProjectItem.js","components/ProjectSelecter.js","components/TodoForm.js","components/TodoItem.js","components/TodoList.js","containers/Todos.js","containers/Main.js","states/weather-reducers.js","states/todo-reducers.js","index.js"],"names":["WeatherDisplay","react_default","a","createElement","className","concat","this","props","masking","src","group","alt","day","description","temp","toFixed","unit","React","Component","WeatherTable","_this$props","list","map","el","i","key","ts","weekDays","Date","getDay","code","maxTemp","minTemp","getWeatherGroup","currentWeatherBaseUrl","currentWeatherSource","axios","CancelToken","source","forecastBaseUrl","forecastSource","geoCodingBaseUrl","geoCodingSource","toggleForm","type","input","value","toggleTemp","selectUnit","getWeather","inputAddress","dispatch","getState","getLocation","checkInput","then","url","console","log","get","cancelToken","token","res","data","error_message","Error","status","pos","lat","results","geometry","location","lon","lng","address","formatted_address","catch","err","isCancel","error","message","searchAddressFromApi","addressInfo","setAddress","getCurrentWeather","cod","weather","id","main","getCurrentWeatherFromApi","endGetCurrentWeather","getForecast","Number","forecast","dt","max","min","shift","getForecastFromApi","endGetForecast","Promise","all","setUnit","resolve","reject","navigator","geolocation","getCurrentPosition","position","currentLocation","coords","latitude","longitude","getCurrentLocationFromApi","locationToAddressFromApi","WeatherForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFormToggle","handleInputChange","e","target","handleMetricUnit","handleImperialUnit","handleSubmit","preventDefault","inputEl","blur","inputValue","trim","submitAction","handleTempToggle","defaultUnit","_this2","_this$props2","formToggle","tempToggle","formCls","Form","onSubmit","Input","name","innerRef","onChange","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","color","getUnitString","DropdownMenu","DropdownItem","onClick","Button","outline","aria-hidden","connect","state","weatherForm","Weather","currentWeatherLoading","cancel","forecastLoading","document","body","querySelector","src_components_WeatherForm","WeatherDisplay_WeatherDisplay","assign","WeatherTable_WeatherTable","objectSpread","currentWeather","todoBaseUrl","listTodos","filterMode","arguments","length","undefined","project","createTodo","text","date","post","accomplishTodo","projectBaseUrl","listProjects","addProject","removeProject","delete","inputDanger","danger","loading","hasGotProjects","listProjectsFromApi","projectList","endListProjects","selectProject","listTodosFromApi","todos","endListTodos","removeTodo","removeTodoFromApi","selectProjectAndList","newProjectInput","newProjectInputDanger","ProjectItem","handleDropdownSelect","handleRemove","removeProjectFromApi","targetProject","ProjectSelecter","handleProjectToggle","addingProject","handleCancelAddProject","handleNewProjectToggle","handleAddProject","alert","addProjectFromApi","_this$props3","_this$props4","projectToggle","projectMenu","src_components_ProjectItem","_id","placeholder","class","TodoForm","handlePost","createTodoFromApi","handleDateChange","Alert","react_datepicker_es","customInput","readOnly","selected","minDate","dateFormat","todoForm","TodoItem","handleCheckboxCheck","accomplishTodoFromApi","doneTs","thisYear","getFullYear","dueDateYear","moment","calendar","TodoList","children","ListGroupItem","t","action","src_components_TodoItem","ListGroup","Todos","toggleAll","toggleActive","toggleComleted","todoLoading","src_components_ProjectSelecter","ButtonGroup","size","src_components_TodoForm","src_components_TodoList","todo","Main","src_containers_Weather","src_containers_Todos","initLocation","initCurrentWeatherState","NaN","initWeatherFormState","getInitForecastState","initTodoFormState","initTodoState","initFilterMode","initProjectState","window","onload","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","ReactDOM","render","react_redux_es","src_containers_Main","getElementById"],"mappings":"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","file":"static/js/main.b1f8d209.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './WeatherDisplay.css';\n\nexport default class WeatherDisplay extends React.Component {\n    static propTypes = {\n        masking: PropTypes.bool,\n        group: PropTypes.string,\n        description: PropTypes.string,\n        temp: PropTypes.number,\n        unit: PropTypes.string\n    };\n\n    render() {\n        return (\n            <div className={`weather-display ${this.props.masking ? 'masking' : ''}`}>\n                <img src={`images/w-${this.props.group}.png`} alt='' />\n                <p className='description'>{`${this.props.day}: ${this.props.description}`}</p>\n                <h1 className='temp'>\n                    <span className='display-3'>{this.props.temp.toFixed(0)}&ordm;</span>\n                    &nbsp;{(this.props.unit === 'metric') ? 'C' : 'F'}\n                </h1>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './WeatherTable.css';\n\nexport default class WeatherTable extends React.Component {\n    static propTypes = {\n        masking: PropTypes.bool,\n        unit: PropTypes.string,\n        list: PropTypes.array\n    };\n\n    static weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    render() {\n        const { masking, list } = this.props;\n\n        return (\n            <div className={`weather-table ${masking ? 'masking' : ''}`}>\n                <div className='d-flex justify-content-around'>{\n                    list.map((el, i) => (\n                        <div key={el.ts} className={i > 2 ? 'hidden-xs-down' : ''}>\n                            <div className='day'>{\n                                WeatherTable.weekDays[(new Date(el.ts * 1000)).getDay()]\n                            }</div>\n                            <i className={`owf owf-${el.code}`}></i>\n                            <span className='weather'>\n                                <span className='max-temp'>{el.maxTemp.toFixed(0)}&ordm;</span>\n                                <span className='min-temp'>{el.minTemp.toFixed(0)}&ordm;</span>\n                            </span>\n                        </div>\n                    ))\n                }</div>\n            </div>\n        );\n    }\n}\n","import axios from 'axios';\n\nconst key = '36978c6550efee0e27e50850cc57adda';\n\nexport const getWeatherGroup = (code) => {\n    let group = 'na';\n    if (200 <= code && code < 300) {\n        group = 'thunderstorm';\n    } else if (300 <= code && code < 400) {\n        group = 'drizzle';\n    } else if (500 <= code && code < 600) {\n        group = 'rain';\n    } else if (600 <= code && code < 700) {\n        group = 'snow';\n    } else if (700 <= code && code < 800) {\n        group = 'atmosphere';\n    } else if (800 === code) {\n        group = 'clear';\n    } else if (801 <= code && code < 900) {\n        group = 'clouds';\n    }\n    return group;\n}\n\nexport const capitalize = (string) => {\n    return string.replace(/\\b\\w/g, l => l.toUpperCase());\n}\n\n\n\n\nconst currentWeatherBaseUrl = `http://api.openweathermap.org/data/2.5/weather?appid=${key}`;\nlet currentWeatherSource = axios.CancelToken.source();\n\nexport const getCurrentWeather = (pos, unit) => {\n    var url = `${currentWeatherBaseUrl}&lat=${pos.lat}&lon=${pos.lon}&units=${unit}`;\n\n    console.log(`Making request to: ${url}`);\n\n    return axios.get(url, { cancelToken: currentWeatherSource.token }).then(function (res) {\n        if (res.data.cod && res.data.message)\n            throw new Error(res.data.message);\n\n        return {\n            code: res.data.weather[0].id,\n            group: getWeatherGroup(res.data.weather[0].id),\n            description: res.data.weather[0].description,\n            temp: res.data.main.temp,\n            unit: unit\n        };\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport function cancelCurrntWeather() {\n    currentWeatherSource.cancel('Current weather request canceled');\n}\n\n\n\n\nconst forecastBaseUrl = `http://api.openweathermap.org/data/2.5/forecast/daily?appid=${key}&cnt=6`;\nlet forecastSource = axios.CancelToken.source();\n\nexport const getForecast = (pos, unit) => {\n    var url = `${forecastBaseUrl}&lat=${pos.lat}&lon=${pos.lon}&units=${unit}`;\n\n    console.log(`Making request to: ${url}`);\n\n    return axios.get(url, { cancelToken: forecastSource.token }).then(function (res) {\n        if (Number(res.data.cod) !== 200)\n            throw new Error(res.data.message);\n\n        const list = res.data.list.map(forecast => {\n            return {\n                ts: forecast.dt,\n                code: forecast.weather[0].id,\n                group: getWeatherGroup(forecast.weather[0].id),\n                description: forecast.weather[0].main,\n                maxTemp: forecast.temp.max,\n                minTemp: forecast.temp.min,\n            };\n        });\n        list.shift(); // remove today\n\n        return {\n            unit: unit,\n            list\n        };\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport const cancelForecast = () => {\n    forecastSource.cancel('Forecast request canceled');\n}\n","import axios from 'axios';\n\nconst key = 'AIzaSyDrQpacyuBhAAB5TFobrhKWyk7rugcEOfw';\n\nconst geoCodingBaseUrl = `https://maps.googleapis.com/maps/api/geocode/json?key=${key}`;\nlet geoCodingSource = axios.CancelToken.source();\n\nexport const locationToAddress = (pos) => {\n    let url = `${geoCodingBaseUrl}&latlng=${pos.lat},${pos.lon}&result_type=administrative_area_level_3`;\n\n    console.log(`Making request to ${url}`);\n\n    return axios.get(url, { cancelToken: geoCodingSource.token }).then(function (res) {\n        if (res.data.error_message)\n            throw new Error(res.data.error_message);\n\n        return res.data.results[0].formatted_address;\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport const searchAddress = (inputAddress) => {\n    let url = `${geoCodingBaseUrl}&address=${inputAddress}`;\n\n    console.log(`Making request to ${url}`);\n\n    return axios.get(url, { cancelToken: geoCodingSource.token }).then(function (res) {\n        if (res.data.error_message)\n            throw new Error(res.data.error_message);\n\n        if (res.data.status === \"ZERO_RESULTS\")\n            throw new Error(`There's no result for ${inputAddress}`);\n\n        return {\n            pos: {\n                lat: res.data.results[0].geometry.location.lat,\n                lon: res.data.results[0].geometry.location.lng,\n            },\n            address: res.data.results[0].formatted_address,\n        };\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport const getCurrentLocation = (getState) => {\n\n    return new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const currentLocation = {\n                lat: position.coords.latitude,\n                lon: position.coords.longitude\n            };\n            resolve(currentLocation);\n        }, () => {\n            resolve(getState().location);\n        });\n    });\n}","import {\n    getCurrentWeather as getCurrentWeatherFromApi,\n    getForecast as getForecastFromApi,\n} from '../api/open-weather-map.js';\n\nimport {\n    getCurrentLocation as getCurrentLocationFromApi,\n    locationToAddress as locationToAddressFromApi,\n    searchAddress as searchAddressFromApi\n} from '../api/location'\n\n\n/* Unit */\n\nconst setUnit = (unit) => {\n    return {\n        type: '@UNIT/SET_UNIT',\n        unit: unit\n    };\n}\n\n/* Address */\n\nconst setAddress = (address) => {\n    return {\n        type: '@ADDRESS/SET_ADDRESS',\n        address: address\n    }\n}\n\n/* Location */\n\nconst setLocation = (location) => {\n    return {\n        type: '@LOACTION/SET_LOCATION',\n        location: location\n    }\n}\n\n/* Masking */\n\nconst maskBg = () => {\n    return {\n        type: '@MASKING/MASK_BG'\n    }\n}\n\nconst unmaskBg = () => {\n    return {\n        type: '@MASKING/UNMASK_BG'\n    }\n}\n\n/* Current Weather */\n\nconst startGetCurrentWeather = () => {\n    return {\n        type: '@CURRENT_WEATHER/START_GET_CURRENT_WEATHER',\n    };\n}\n\nconst endGetCurrentWeather = (code, group, description, temp) => {\n    return {\n        type: '@CURRENT_WEATHER/END_GET_CURRENT_WEATHER',\n        code,\n        group,\n        description,\n        temp,\n    };\n}\n\nconst resetCurrentWeather = () => {\n    return {\n        type: '@CURRENT_WEATHER/RESET_CURRENT_WEATHER'\n    };\n}\n\n\n/* WeatherForm */\n\nexport const toggleForm = () => {\n    return {\n        type: '@WEATHER_FORM/TOGGLE_FORM'\n    };\n}\n\nexport const input = (value) => {\n    return {\n        type: '@WEATHER_FORM/INPUT',\n        value\n    };\n}\n\nexport const toggleTemp = () => {\n    return {\n        type: '@WEATHER_FORM/TOGGLE_TEMP'\n    };\n}\n\nexport const selectUnit = (unit) => {\n    return {\n        type: '@WEATHER_FORM/SELECT_UNIT',\n        unit\n    };\n}\n\n/* Forecast */\n\nconst startGetForecast = () => {\n    return {\n        type: '@FORECAST/START_GET_FORECAST',\n    };\n}\n\nconst endGetForecast = (list) => {\n    return {\n        type: '@FORECAST/END_GET_FORECAST',\n        list\n    };\n}\n\nconst resetForecast = () => {\n    return {\n        type: '@FORECAST/RESET_FORECAST'\n    };\n}\n\n\n\n/* Weather */\n\nexport const getWeather = (inputAddress, unit) => {\n    return (dispatch, getState) => {\n\n        dispatch(maskBg());\n\n        const getLocation = checkInput(inputAddress, getState).then(inputAddress => {\n            return searchAddressFromApi(inputAddress);\n        }).then(addressInfo => {\n            const { pos, address } = addressInfo;\n            dispatch(setAddress(address));\n            dispatch(setLocation(pos));\n            return pos;\n        });\n\n        const getCurrentWeather = getLocation.then(pos => {\n            dispatch(startGetCurrentWeather());\n            return getCurrentWeatherFromApi(pos, unit);\n        }).then(weather => {\n            const { code, group, description, temp } = weather;\n            dispatch(endGetCurrentWeather(code, group, description, temp));\n        }).catch(err => {\n            console.error('Error getting current weather', err);\n            dispatch(resetCurrentWeather());\n            dispatch(unmaskBg());\n        });\n\n        const getForecast = getLocation.then(pos => {\n            dispatch(startGetForecast());\n            return getForecastFromApi(pos, unit);\n        }).then(forecast => {\n            const { list } = forecast;\n            dispatch(endGetForecast(list));\n        }).catch(err => {\n            console.error('Error getting forecast', err);\n            dispatch(resetForecast());\n            dispatch(unmaskBg());\n        });\n\n        return Promise.all([getCurrentWeather, getForecast]).then(() => {\n            dispatch(setUnit(unit));\n            dispatch(unmaskBg());\n        });\n    }\n}\n\nconst checkInput = (inputAddress, getState) => {\n    return new Promise((resolve, reject) => {\n        let hasAddress = inputAddress !== '' ? true : false;\n\n        if (!hasAddress) {\n            getCurrentLocationFromApi(getState).then(currentLocation => {\n                return locationToAddressFromApi(currentLocation);\n            }).then(address => {\n                resolve(address);\n            });\n        }\n        else\n            resolve(inputAddress);\n    });\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Form,\n    Input,\n    Button,\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { toggleForm, input, toggleTemp, selectUnit } from '../states/weather-actions.js';\n\nimport './WeatherForm.css';\n\nclass WeatherForm extends React.Component {\n    static propTypes = {\n        inputValue: PropTypes.string,\n        formToggle: PropTypes.bool,\n        tempToggle: PropTypes.bool,\n        unit: PropTypes.string,\n        address: PropTypes.string,\n        defaultUnit: PropTypes.string,\n        submitAction: PropTypes.func,\n        dispatch: PropTypes.func\n    };\n\n    static getUnitString(unit) {\n        return unit === 'metric' ? 'C' : 'F';\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.inputEl = null;\n    }\n\n    componentDidMount() {\n        this.props.dispatch(selectUnit(this.props.defaultUnit));\n    }\n\n    render() {\n        const { inputValue, formToggle, tempToggle, unit, address } = this.props;\n        const formCls = formToggle ? 'form' : '';\n\n        return (\n            <div className={`weather-form ${formCls}`}>{formToggle ?\n                <Form className='form-inline justify-content-center' onSubmit={this.handleSubmit}>\n                    <Input type='text' name='address' innerRef={el => { this.inputEl = el }} value={inputValue} onChange={this.handleInputChange}></Input>&nbsp;\n                    <ButtonDropdown type='buttom' isOpen={tempToggle} toggle={this.handleTempToggle}>\n                        <DropdownToggle type='button' caret color=\"secondary\">\n                            &ordm; {WeatherForm.getUnitString(unit)}\n                        </DropdownToggle>\n                        <DropdownMenu>\n                            <DropdownItem type='button' onClick={this.handleMetricUnit}>&ordm; C</DropdownItem>\n                            <DropdownItem type='button' onClick={this.handleImperialUnit}>&ordm; F</DropdownItem>\n                        </DropdownMenu>\n                    </ButtonDropdown>&nbsp;\n                    <Button color=\"info\">Check</Button>\n                </Form> :\n                <Button className='btn-form' outline color=\"light\" onClick={this.handleFormToggle}><i className='fa fa-map-marker' aria-hidden=\"true\"></i>&nbsp;&nbsp;{address}</Button>\n            }</div>\n        );\n    }\n\n    handleFormToggle = () => {\n        this.props.dispatch(toggleForm());\n    }\n\n    handleInputChange = (e) => {\n        this.props.dispatch(input(e.target.value));\n    }\n\n    handleMetricUnit = (e) => {\n        this.props.dispatch(selectUnit('metric'));\n    }\n\n    handleImperialUnit = (e) => {\n        this.props.dispatch(selectUnit('imperial'));\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.inputEl.blur();\n        const { inputValue, address, unit, dispatch } = this.props;\n        if (inputValue && inputValue.trim()) {\n            dispatch(this.props.submitAction(inputValue, unit));\n            this.handleFormToggle();\n        } else {\n            dispatch(input(address));\n        }\n    }\n\n    handleTempToggle = (e) => {\n        this.props.dispatch(toggleTemp());\n    }\n}\n\nexport default connect(state => state.weatherForm)(WeatherForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport WeatherDisplay from '../components/WeatherDisplay';\nimport WeatherTable from '../components/WeatherTable';\nimport WeatherForm from '../components/WeatherForm';\nimport { getWeather } from '../states/weather-actions';\nimport { cancelCurrntWeather, cancelForecast } from '../api/open-weather-map.js';\n\nimport './Weather.css';\n\nclass Weather extends React.Component {\n    static propTypes = {\n        inputValue: PropTypes.string,\n        address: PropTypes.string,\n        unit: PropTypes.string,\n        masking: PropTypes.bool,\n        dispatch: PropTypes.func,\n\n        list: PropTypes.array,\n        forecastLoading: PropTypes.bool,\n\n        code: PropTypes.number,\n        group: PropTypes.string,\n        description: PropTypes.string,\n        temp: PropTypes.number,\n        currentWeatherLoading: PropTypes.bool,\n    };\n\n    componentDidMount() {\n        this.props.dispatch(getWeather(this.props.inputValue, this.props.unit));\n    }\n\n    componentWillUnmount() {\n        if (this.props.currentWeatherLoading) {\n            cancelCurrntWeather();\n        };\n\n        if (this.props.forecastLoading) {\n            cancelForecast();\n        };\n    }\n\n    render() {\n        const { address, group, description, temp, list, unit, masking } = this.props;\n        const forecast = list;\n\n        document.body.className = `weather-bg ${group}`;\n        document.querySelector('.weather-bg .mask').className = `mask ${masking ? 'masking' : ''}`;\n\n        return (\n            <div className='weather'>\n                <div className='current'>\n                    <WeatherForm address={address} defaultUnit={unit} submitAction={getWeather} />\n                    <WeatherDisplay {...{ group, description, temp, unit, masking }} day='today' />\n                </div>\n                <div className='forecast'>\n                    <WeatherTable list={forecast} unit={unit} masking={masking} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({\n    ...state.currentWeather,\n    ...state.forecast,\n    inputValue: state.weatherForm.inputValue,\n    unit: state.unit,\n    address: state.address,\n    masking: state.masking,\n}))(Weather);\n","import axios from 'axios';\n\nconst todoBaseUrl = 'http://weathernote-server-dev.us-west-2.elasticbeanstalk.com/api/todos';\n\nexport const listTodos = (filterMode = 'all', project) => {\n    let url = `${todoBaseUrl}?`;\n\n    if (filterMode === 'active')\n        url += 'mode=active';\n    else if (filterMode === 'completed')\n        url += 'mode=completed';\n    else\n        url += 'mode=all';\n\n    url += `&project=${project}`\n\n    console.log(`Making GET request to: ${url}`);\n\n    return axios.get(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\n\nexport const createTodo = (text, date, project) => {\n    let url = todoBaseUrl;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url, { text, date, project }).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\n\nexport const accomplishTodo = (id) => {\n    let url = `${todoBaseUrl}/${id}`;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\n\nexport const removeTodo = (id) => {\n    let url = `${todoBaseUrl}/${id}`;\n\n    console.log(`Making DELETE request to: ${url}`);\n\n    return axios.delete(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n","import axios from 'axios';\n\nconst projectBaseUrl = 'http://weathernote-server-dev.us-west-2.elasticbeanstalk.com/api/projects';\n\nexport const listProjects = () => {\n    let url = `${projectBaseUrl}`;\n\n    console.log(`Making GET request to: ${url}`);\n\n    return axios.get(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\nexport const addProject = (name) => {\n    let url = projectBaseUrl;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url, { name }).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\nexport const removeProject = (name) => {\n    let url = `${projectBaseUrl}/${name}`;\n\n    console.log(`Making DELETE request to: ${url}`);\n\n    return axios.delete(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n","import {\n    listTodos as listTodosFromApi,\n    createTodo as createTodoFromApi,\n    accomplishTodo as accomplishTodoFromApi,\n    removeTodo as removeTodoFromApi\n} from '../api/todos.js';\n\nimport {\n    listProjects as listProjectsFromApi,\n    addProject as addProjectFromApi,\n    removeProject as removeProjectFromApi,\n} from '../api/projects.js'\n\n/*  Todo Form */\n\nexport function input(value) {\n    return {\n        type: '@TODO_FORM/INPUT',\n        value\n    };\n};\n\nexport function inputDanger(danger) {\n    return {\n        type: '@TODO_FORM/INPUT_DANGER',\n        danger\n    };\n};\n\nexport function setDate(date) {\n    return {\n        type: '@TODO_FORM/SET_DATE',\n        date,\n    };\n}\n\n/*  Todos */\n\nfunction startLoading() {\n    return {\n        type: '@TODO/START_LOADING'\n    };\n}\n\nfunction endLoading() {\n    return {\n        type: '@TODO/END_LOADING'\n    };\n}\n\nfunction endListTodos(todos) {\n    return {\n        type: '@TODO/END_LIST_TODOS',\n        todos\n    };\n}\n\nexport function listTodos(loading = false) {\n    return (dispatch, getState) => {\n        if (!loading)\n            dispatch(startLoading());\n\n        let p;\n\n        if (getState().project.hasGotProjects === false) {\n            p = listProjectsFromApi().then(projectList => {\n                dispatch(endListProjects(projectList));\n\n                if (projectList.length !== 0)\n                    dispatch(selectProject(projectList[0].name));\n                else\n                    dispatch(selectProject(''));\n\n                dispatch(hasGotProjects());\n            });\n        }\n        else {\n            p = new Promise((resolve, reject) => {\n                resolve();\n            });\n        }\n\n        return p.then(() => {\n            return listTodosFromApi(getState().filterMode, getState().project.name)\n        }).then(todos => {\n            dispatch(endListTodos(todos));\n        }).catch(err => {\n            console.error('Error listing todos', err);\n        }).then(() => {\n            dispatch(endLoading());\n        });\n    }\n}\n\nexport function createTodo(text, date) {\n    return (dispatch, getState) => {\n        dispatch(startLoading());\n\n        return createTodoFromApi(text, date, getState().project.name).then(() => {\n            dispatch(listTodos(true));\n        }).catch(err => {\n            console.error('Error creating todos', err);\n            dispatch(listTodos(true));\n        });\n    };\n};\n\nexport function accomplishTodo(id) {\n    return (dispatch) => {\n        dispatch(startLoading(true));\n\n        return accomplishTodoFromApi(id).then(() => {\n            dispatch(listTodos(true));\n        }).catch(err => {\n            console.error('Error accomplishing todos', err);\n            dispatch(listTodos(true));\n        });\n    }\n}\n\nexport const removeTodo = (id) => {\n    return (dispatch) => {\n        dispatch(startLoading(true));\n\n        return removeTodoFromApi(id).then(() => {\n            dispatch(listTodos(true));\n        }).catch(err => {\n            console.error('Error removing todos', err);\n            dispatch(listTodos(true));\n        });\n    }\n}\n\n/* Filter */\n\nfunction toggleAll() {\n    return {\n        type: '@FILTER/TOGGLE_ALL'\n    };\n}\n\nexport function toggleAllAndList() {\n    return (dispatch) => {\n        dispatch(toggleAll());\n        return dispatch(listTodos());\n    }\n}\n\nfunction toggleActive() {\n    return {\n        type: '@FILTER/TOGGLE_ACTIVE'\n    };\n}\n\nexport function toggleActiveAndList() {\n    return (dispatch) => {\n        dispatch(toggleActive());\n        return dispatch(listTodos());\n    }\n}\n\nfunction toggleComleted() {\n    return {\n        type: '@FILTER/TOGGLE_COMPLETED'\n    };\n}\n\nexport function toggleComletedAndList() {\n    return (dispatch) => {\n        dispatch(toggleComleted());\n        return dispatch(listTodos());\n    }\n}\n\n\n/* Project */\n\nexport function toggleProject() {\n    return {\n        type: '@PROJECT/TOGGLE_PROJECT'\n    }\n}\n\nfunction selectProject(project) {\n    return {\n        type: '@PROJECT/SELECT_PROJECT',\n        project\n    }\n}\n\nexport function selectProjectAndList(project) {\n    return (dispatch) => {\n        dispatch(selectProject(project));\n        dispatch(toggleProject());\n        return dispatch(listTodos());\n    }\n}\n\nfunction endListProjects(projectList) {\n    return {\n        type: '@PROJECT/END_LIST_PROJECTS',\n        projectList\n    };\n}\n\nexport function startAddProject() {\n    return {\n        type: '@PROJECT/START_ADD_PROJECT',\n    }\n}\n\nexport function finishAddProject() {\n    return {\n        type: '@PROJECT/FINISH_ADD_PROJECT',\n    };\n}\n\nexport function addProject(inputValue) {\n    return (dispatch, getState) => {\n        dispatch(startLoading());\n\n        return addProjectFromApi(inputValue).then(() => {\n            return listProjectsFromApi()\n        }).then(projectList => {\n            dispatch(endListProjects(projectList));\n            dispatch(selectProjectAndList(inputValue));\n        }).catch(err => {\n            console.error('Error adding project', err);\n            dispatch(selectProjectAndList(''));\n        });\n    };\n}\n\nexport function removeProject(name) {\n    return (dispatch, getState) => {\n        dispatch(startLoading());\n\n        return removeProjectFromApi(name).then(() => {\n            return listProjectsFromApi()\n        }).then(projectList => {\n            dispatch(endListProjects(projectList));\n\n            let targetProject;\n\n            if (getState().project.name === name || projectList.length === 0)\n                targetProject = '';\n            else\n                targetProject = getState().project.name;\n\n            dispatch(selectProjectAndList(targetProject));\n        }).catch(err => {\n            console.error('Error adding project', err);\n            dispatch(selectProjectAndList(''));\n        });\n    };\n}\n\nexport function newProjectInput(value) {\n    return {\n        type: '@PROJECT/INPUT',\n        value\n    };\n}\n\nexport function newProjectInputDanger(danger) {\n    return {\n        type: '@PROJECT/INPUT_DANGER',\n        danger\n    };\n}\n\nfunction hasGotProjects() {\n    return {\n        type: '@PROJECT/HAS_GOT_PROJECTS'\n    };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { removeProject, selectProjectAndList } from '../states/todo-actions.js';\n\nimport './ProjectItem.css';\n\nclass ProjectItem extends React.Component {\n    static propTypes = {\n        name: PropTypes.string,\n        dispatch: PropTypes.func\n    };\n\n    render() {\n        const { name } = this.props;\n        return (\n            <div className='project-item d-flex flex-row'>\n                <div className='project-name flex-grow-1' onClick={() => { this.handleDropdownSelect(name) }}>\n                    <i className=\"fas fa-circle\"></i>\n                    {name}\n                </div>\n                <div className='remove align-self-center'>\n                    <i className=\"far fa-trash-alt\" onClick={this.handleRemove}></i>\n                </div>\n            </div>\n        )\n    }\n\n    handleDropdownSelect = (project) => {\n        this.props.dispatch(selectProjectAndList(project));\n    }\n\n    handleRemove = () => {\n        this.props.dispatch(removeProject(this.props.name));\n    }\n}\n\nexport default connect()(ProjectItem);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n} from 'reactstrap';\n\nimport {\n    toggleProject,\n    addProject,\n    startAddProject,\n    finishAddProject,\n    newProjectInput,\n    newProjectInputDanger,\n} from '../states/todo-actions.js';\n\nimport ProjectItem from './ProjectItem.js';\nimport './ProjectSelecter.css'\n\nclass ProjectSelecter extends React.Component {\n    static propTypes = {\n        projectToggle: PropTypes.bool,\n        name: PropTypes.string,\n        projectList: PropTypes.array,\n        addingProject: PropTypes.bool,\n        inputValue: PropTypes.string,\n        dispatch: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.inputEl = null;\n    };\n\n    render() {\n        const { projectToggle, projectList, name, addingProject, inputValue } = this.props;\n\n        const projectMenu = projectList.map(e => {\n            return <ProjectItem id={e._id} name={e.name} />\n        });\n\n        return (\n            <div className='project align-self-start'>\n                <ButtonDropdown type='buttom' isOpen={projectToggle} toggle={this.handleProjectToggle}>\n                    <DropdownToggle className='project-toggle' type='button' caret color=\"light\">\n                        {name !== '' ? name : 'Choose a project'}\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        {projectMenu}\n                        {addingProject ?\n                            <div className='add-project'>\n                                <input type='text'\n                                    className='form-control no-border'\n                                    placeholder='Name your project'\n                                    innerRef={el => { this.inputEl = el }}\n                                    value={inputValue}\n                                    onChange={this.handleInputChange} />\n                                <div className='add-or-cancel'>\n                                    <button type=\"button\" class=\"btn btn-info btn-sm mb-0 ml-1 mt-2\" onClick={this.handleAddProject}>Add</button>\n                                    <button type=\"button\" class=\"btn btn-info btn-sm mb-0 ml-1 mt-2\" onClick={this.handleCancelAddProject}>Cancel</button>\n                                </div>\n                            </div> :\n                            <div className='last-item d-flex flex-row'>\n                                <div className='new-project flex-grow-1' onClick={this.handleNewProjectToggle}>\n                                    <i className=\"fas fa-plus\"></i>\n                                    Add project\n                                </div>\n                                <div className='remove align-self-center'>\n                                    <i className=\"far fa-times-circle\"></i>\n                                </div>\n                            </div>}\n                    </DropdownMenu>\n                </ButtonDropdown>\n            </div>\n        )\n    }\n\n    handleProjectToggle = (e) => {\n        const { addingProject, dispatch } = this.props;\n\n        if (addingProject)\n            this.handleCancelAddProject();\n\n        dispatch(toggleProject());\n    }\n\n    handleInputChange = (e) => {\n        const text = e.target.value\n        this.props.dispatch(newProjectInput(text));\n        if (text && this.props.inputDanger) {\n            this.props.dispatch(newProjectInputDanger(false));\n        }\n    }\n\n    handleNewProjectToggle = () => {\n        this.props.dispatch(startAddProject());\n    }\n\n    handleAddProject = () => {\n        const { inputValue, dispatch, projectList } = this.props;\n\n        if (!inputValue) {\n            dispatch(newProjectInputDanger(true));\n            return;\n        }\n\n        for (let i = 0; i < projectList.length; i++) {\n            if (projectList[i].name === inputValue) {\n                alert(`${inputValue} has been created.`);\n                return;\n            }\n        }\n\n        dispatch(addProject(inputValue));\n        dispatch(newProjectInput(''));\n    }\n\n    handleCancelAddProject = () => {\n        const { inputValue, dispatch } = this.props;\n\n        if (inputValue !== '')\n            dispatch(newProjectInput(''));\n\n        dispatch(finishAddProject());\n    }\n}\n\nexport default connect(state => ({\n    ...state.project\n}))(ProjectSelecter)","import React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport PropTypes from 'prop-types';\nimport {\n    Alert,\n    Input,\n    Button,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { createTodo, input, inputDanger, setDate } from '../states/todo-actions.js';\n\nimport './TodoForm.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass TodoForm extends React.Component {\n    static propTypes = {\n        inputValue: PropTypes.string,\n        inputDanger: PropTypes.bool,\n        date: PropTypes.instanceOf(Date),\n        project: PropTypes.string,\n        dispatch: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.inputEl = null;\n    };\n\n    render() {\n        const { inputValue, date } = this.props;\n        const inputDanger = this.props.inputDanger ? 'has-danger' : '';\n\n        const CustomInput = (props) => {\n            return (\n                <input\n                    className='datepicker'\n                    onClick={props.onClick}\n                    value={props.value}\n                    type=\"text\"\n                    readOnly={true}\n                />\n            )\n        }\n\n        return (\n            <div className='post-form'>\n                <Alert color='info' className={`d-flex flex-row justify-content-center ${inputDanger}`}>\n                    <DatePicker\n                        customInput={<CustomInput />}\n                        selected={date}\n                        onChange={this.handleDateChange}\n                        minDate={new Date()}\n                        dateFormat='yyyy/MM/dd'\n                    />\n                    <Input className='input'\n                        type='textarea'\n                        innerRef={el => { this.inputEl = el }}\n                        value={inputValue}\n                        onChange={this.handleInputChange}\n                        placeholder=\"What's next to do?\" />\n                    <Button className='btn-post align-self-end mb-0 h-100' color=\"info\" onClick={this.handlePost}>Add</Button>\n                </Alert>\n            </div>\n        );\n    }\n\n    handleInputChange = (e) => {\n        const text = e.target.value\n        this.props.dispatch(input(text));\n        if (text && this.props.inputDanger) {\n            this.props.dispatch(inputDanger(false));\n        }\n    }\n\n    handlePost = () => {\n        const { inputValue, dispatch, project, date } = this.props;\n\n        if (!inputValue) {\n            dispatch(inputDanger(true));\n            return;\n        }\n\n        if (project === '') {\n            alert('Please choose a project.');\n            return;\n        }\n\n        dispatch(createTodo(inputValue, date));\n        dispatch(input(''));\n    }\n\n    handleDateChange = (e) => {\n        this.props.dispatch(setDate(e));\n    }\n}\n\nexport default connect(state => ({\n    ...state.todoForm,\n    project: state.project.name,\n}))(TodoForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport dateFormat from 'dateformat';\n\nimport { accomplishTodo, removeTodo } from '../states/todo-actions';\n\nimport './TodoItem.css';\n\nclass TodoItem extends React.Component {\n    static propTypes = {\n        id: PropTypes.string,\n        text: PropTypes.string,\n        date: PropTypes.instanceOf(Date),\n        ts: PropTypes.number,\n        doneTs: PropTypes.number,\n        project: PropTypes.string,\n        dispatch: PropTypes.func\n    };\n\n    render() {\n        const { text, date, ts, doneTs } = this.props;\n        const thisYear = (new Date()).getFullYear();\n        const dueDateYear = (new Date(date)).getFullYear();\n\n        return (\n            <div className={'todo-item d-flex flex-row ' + (doneTs ? 'done' : 'undone')}>\n                <div className='date'>\n                    {thisYear === dueDateYear ?\n                        dateFormat(date, 'mmm d') :\n                        dateFormat(date, 'yyyy\\nmmm d')}\n                </div>\n                <div className='todo d-flex flex-column'>\n                    <div className='d-flex flex-row'>\n                        <div className='wrap'>\n                            <div className='ts'>{'Created: ' + moment(ts * 1000).calendar()}</div>\n                            <div className='text'>{text}</div>\n                        </div>\n                        <div className='remove align-self-start' onClick={this.handleRemove}>\n                            <i class=\"fas fa-trash-alt\"></i>\n                        </div>\n                    </div>\n                    <div className='check d-flex justify-content-end align-items-center'>\n                        <div className='done-ts'>{\n                            !!doneTs &&\n                            <span>{moment(doneTs * 1000).calendar()}</span>\n                        }</div>\n                        <div className='checkbox' onClick={this.handleCheckboxCheck}>\n                            <i className={'far ' + (doneTs ? 'fa-check-square' : 'fa-square')}></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    handleCheckboxCheck = (e) => {\n        this.props.dispatch(accomplishTodo(this.props.id));\n\n    }\n\n    handleRemove = (e) => {\n        this.props.dispatch(removeTodo(this.props.id));\n    }\n}\n\nexport default connect()(TodoItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    ListGroup,\n    ListGroupItem\n} from 'reactstrap';\n\nimport TodoItem from './TodoItem';\nimport './TodoList.css';\n\nclass TodoList extends React.Component {\n    static propTypes = {\n        todos: PropTypes.array,\n    };\n\n    render() {\n        const { todos } = this.props;\n\n        let children = (\n            <ListGroupItem className='empty d-flex justify-content-center align-items-center'>\n                <div className='empty-text'>There are no other todos.</div>\n            </ListGroupItem>\n        );\n        if (todos.length) {\n            children = todos.map(t => (\n                <ListGroupItem key={t.id} action={true}>\n                    <TodoItem {...t} />\n                </ListGroupItem>\n            ));\n        }\n\n        return (\n            <div className='todo-list'>\n                <ListGroup>{children}</ListGroup>\n            </div>\n        );\n    }\n}\n\nexport default connect()(TodoList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, ButtonGroup } from 'reactstrap';\n\nimport ProjectSelecter from '../components/ProjectSelecter';\nimport TodoForm from '../components/TodoForm';\nimport TodoList from '../components/TodoList';\n\nimport {\n    listTodos,\n    toggleAllAndList,\n    toggleActiveAndList,\n    toggleComletedAndList\n} from '../states/todo-actions.js';\n\nimport './Todos.css';\n\nclass Todos extends React.Component {\n    static propTypes = {\n        todoLoading: PropTypes.bool,\n        todos: PropTypes.array,\n        filterMode: PropTypes.string,\n        dispatch: PropTypes.func,\n    };\n\n    componentDidMount() {\n        this.props.dispatch(listTodos());\n    }\n\n    render() {\n        const { todoLoading, todos, filterMode } = this.props;\n\n        return (\n            <div className='todos d-flex flex-column'>\n                <div className='d-flex justify-content-between'>\n                    <ProjectSelecter />\n                    <ButtonGroup size='sm'>\n                        <Button outline={filterMode === 'all' ? false : true} color='light' onClick={this.toggleAll}>All</Button>\n                        <Button outline={filterMode === 'active' ? false : true} color='light' onClick={this.toggleActive}>Active</Button>\n                        <Button outline={filterMode === 'completed' ? false : true} color='light' onClick={this.toggleComleted}>Completed</Button>\n                    </ButtonGroup>\n                </div>\n                <TodoForm />\n                <TodoList todos={todos} />{\n                    todoLoading &&\n                    <i className=\"fas fa-spinner fa-spin loading\"></i>\n                }\n            </div>\n        );\n    }\n\n    toggleAll = () => {\n        this.props.dispatch(toggleAllAndList());\n    }\n\n    toggleActive = () => {\n        this.props.dispatch(toggleActiveAndList());\n    }\n\n    toggleComleted = () => {\n        this.props.dispatch(toggleComletedAndList());\n    }\n}\n\nexport default connect(state => ({\n    ...state.todo,\n    filterMode: state.filterMode,\n}))(Todos);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Weather from './Weather';\nimport Todos from './Todos';\n\nimport './Main.css';\n\nclass Main extends React.Component {\n    static propTypes = {\n        store: PropTypes.object,\n        dispatch: PropTypes.func\n    };\n\n    render() {\n        return (\n            <div className='main'>\n                <Weather />\n                <Todos />\n            </div>\n        );\n    }\n}\n\nexport default connect()(Main);\n","const initUnitState = 'metric';\n\nexport const unit = (state = initUnitState, action) => {\n    switch (action.type) {\n        case '@UNIT/SET_UNIT':\n            return action.unit;\n        default:\n            return state;\n    }\n}\n\nconst initAddress = '';\n\nexport const address = (state = initAddress, action) => {\n    switch (action.type) {\n        case '@ADDRESS/SET_ADDRESS':\n            return action.address;\n        default:\n            return state;\n    }\n}\n\n\nconst initLocation = {\n    lat: 25.0173405,\n    lon: 121.5397518\n};\n\nexport const location = (state = initLocation, action) => {\n    switch (action.type) {\n        case '@LOACTION/SET_LOCATION':\n            return action.location;\n        default:\n            return state;\n    }\n}\n\n\nconst initMaskingState = false;\n\nexport const masking = (state = initMaskingState, action) => {\n    switch (action.type) {\n        case '@MASKING/MASK_BG':\n            return true;\n        case '@MASKING/UNMASK_BG':\n            return false;\n        default:\n            return state;\n    }\n}\n\n\nconst initCurrentWeatherState = {\n    code: -1,\n    group: 'na',\n    description: 'N/A',\n    temp: NaN,\n    currentWeatherLoading: false,\n};\n\nexport const currentWeather = (state = initCurrentWeatherState, action) => {\n    switch (action.type) {\n        case '@CURRENT_WEATHER/START_GET_CURRENT_WEATHER':\n            return {\n                ...state,\n                currentWeatherLoading: true\n            };\n        case '@CURRENT_WEATHER/END_GET_CURRENT_WEATHER':\n            return {\n                ...state,\n                code: action.code,\n                group: action.group,\n                description: action.description,\n                temp: action.temp,\n                currentWeatherLoading: false\n            };\n        case '@CURRENT_WEATHER/RESET_CURRENT_WEATHER':\n            return {\n                ...initCurrentWeatherState,\n            };\n        default:\n            return state;\n    }\n}\n\nconst initWeatherFormState = {\n    inputValue: '',\n    formToggle: false,\n    tempToggle: false,\n    unit: null,\n};\n\nexport const weatherForm = (state = initWeatherFormState, action) => {\n    switch (action.type) {\n        case '@WEATHER_FORM/TOGGLE_FORM':\n            return {\n                ...state,\n                formToggle: !state.formToggle\n            };\n        case '@WEATHER_FORM/INPUT':\n            return {\n                ...state,\n                inputValue: action.value\n            };\n        case '@WEATHER_FORM/TOGGLE_TEMP':\n            return {\n                ...state,\n                tempToggle: !state.tempToggle\n            };\n        case '@WEATHER_FORM/SELECT_UNIT':\n            return {\n                ...state,\n                unit: action.unit\n            };\n        default:\n            return state;\n    }\n}\n\nconst getInitForecastState = () => {\n    let list = [];\n    for (let i = 0; i < 5; i++) {\n        list[i] = {\n            ts: -i,\n            code: -1,\n            group: 'na',\n            description: 'N/A',\n            maxTemp: NaN,\n            minTemp: NaN,\n        };\n    }\n    return {\n        list,\n        forecastLoading: false,\n    };\n}\n\nexport const forecast = (state = getInitForecastState(), action) => {\n    switch (action.type) {\n        case '@FORECAST/START_GET_FORECAST':\n            return {\n                ...state,\n                forecastLoading: true\n            };\n        case '@FORECAST/END_GET_FORECAST':\n            return {\n                ...state,\n                list: action.list,\n                forecastLoading: false\n            };\n        case '@FORECAST/RESET_FORECAST':\n            return {\n                ...getInitForecastState(),\n            };\n        default:\n            return state;\n    }\n}\n\n","/* Todo Form */\n\nconst initTodoFormState = {\n    inputValue: '',\n    inputDanger: false,\n    date: new Date(),\n};\n\nexport function todoForm(state = initTodoFormState, action) {\n    switch (action.type) {\n        case '@TODO_FORM/INPUT':\n            return {\n                ...state,\n                inputValue: action.value\n            };\n        case '@TODO_FORM/INPUT_DANGER':\n            return {\n                ...state,\n                inputDanger: action.danger\n            };\n        case '@TODO_FORM/SET_DATE':\n            return {\n                ...state,\n                date: action.date,\n            };\n        default:\n            return state;\n    }\n}\n\n/* Todos */\n\nconst initTodoState = {\n    todoLoading: false,\n    todos: [],\n};\n\nexport function todo(state = initTodoState, action) {\n    switch (action.type) {\n        case '@TODO/START_LOADING':\n            return {\n                ...state,\n                todoLoading: true\n            };\n        case '@TODO/END_LOADING':\n            return {\n                ...state,\n                todoLoading: false\n            };\n        case '@TODO/END_LIST_TODOS':\n            return {\n                ...state,\n                todos: action.todos\n            };\n        default:\n            return state;\n    }\n}\n\n/* Filter */\n\nconst initFilterMode = 'all'\n\nexport function filterMode(state = initFilterMode, action) {\n    switch (action.type) {\n        case '@FILTER/TOGGLE_ALL':\n            return 'all';\n        case '@FILTER/TOGGLE_ACTIVE':\n            return 'active';\n        case '@FILTER/TOGGLE_COMPLETED':\n            return 'completed';\n        default:\n            return state;\n    }\n}\n\n/* Project */\n\nconst initProjectState = {\n    projectToggle: false,\n    name: '',\n    projectList: [],\n    addingProject: false,\n    inputValue: '',\n    inputDanger: false,\n    hasGotProjects: false,\n};\n\nexport function project(state = initProjectState, action) {\n    switch (action.type) {\n        case '@PROJECT/END_LIST_PROJECTS':\n            return {\n                ...state,\n                projectList: action.projectList,\n            }\n        case '@PROJECT/TOGGLE_PROJECT':\n            return {\n                ...state,\n                projectToggle: !state.projectToggle,\n            }\n        case '@PROJECT/SELECT_PROJECT':\n            return {\n                ...state,\n                name: action.project,\n            }\n        case '@PROJECT/START_ADD_PROJECT':\n            return {\n                ...state,\n                addingProject: true\n            }\n        case '@PROJECT/FINISH_ADD_PROJECT':\n            return {\n                ...state,\n                addingProject: false\n            }\n        case '@PROJECT/INPUT':\n            return {\n                ...state,\n                inputValue: action.value\n            }\n        case '@PROJECT/INPUT_DANGER':\n            return {\n                ...state,\n                inputDanger: action.danger\n            }\n        case '@PROJECT/HAS_GOT_PROJECTS':\n            return {\n                ...state,\n                hasGotProjects: true\n            }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport Main from './containers/Main';\nimport { unit, address, location, masking, currentWeather, weatherForm, forecast } from './states/weather-reducers';\nimport { todoForm, todo, filterMode, project } from './states/todo-reducers';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nwindow.onload = function () {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const store = createStore(combineReducers({\n        unit, address, location, masking,\n        currentWeather, weatherForm, forecast,\n        todoForm, todo, filterMode, project,\n    }), composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <Main />\n        </Provider>,\n        document.getElementById('root')\n    );\n};\n"],"sourceRoot":""}