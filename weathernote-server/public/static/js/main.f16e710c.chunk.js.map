{"version":3,"sources":["components/WeatherDisplay.js","components/WeatherTable.js","api/open-weather-map.js","api/location.js","states/weather-actions.js","components/WeatherForm.js","containers/Weather.js","api/todos.js","api/projects.js","states/todo-actions.js","components/ProjectItem.js","components/ProjectSelecter.js","components/TodoForm.js","components/TodoItem.js","components/TodoList.js","containers/Todos.js","containers/Main.js","states/weather-reducers.js","states/todo-reducers.js","index.js"],"names":["WeatherDisplay","react_default","a","createElement","className","concat","this","props","masking","src","group","alt","day","description","temp","toFixed","unit","React","Component","WeatherTable","_this$props","list","map","el","i","key","ts","weekDays","Date","getDay","code","maxTemp","minTemp","getWeatherGroup","currentWeatherBaseUrl","currentWeatherSource","axios","CancelToken","source","forecastBaseUrl","forecastSource","geoCodingBaseUrl","geoCodingSource","geoLocationBaseUrl","geoLocationSource","toggleForm","type","input","value","toggleTemp","selectUnit","getWeather","inputAddress","dispatch","getState","getLocation","checkInput","then","url","console","log","get","cancelToken","token","res","data","error_message","Error","status","pos","lat","results","geometry","location","lon","lng","address","formatted_address","catch","err","isCancel","error","message","searchAddressFromApi","addressInfo","setAddress","getCurrentWeather","cod","weather","id","main","getCurrentWeatherFromApi","endGetCurrentWeather","getForecast","Number","forecast","dt","max","min","shift","getForecastFromApi","endGetForecast","Promise","all","setUnit","resolve","reject","post","getCurrentLocationFromApi","currentLocation","locationToAddressFromApi","WeatherForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFormToggle","handleInputChange","e","target","handleMetricUnit","handleImperialUnit","handleSubmit","preventDefault","inputEl","blur","inputValue","trim","submitAction","handleTempToggle","defaultUnit","_this2","_this$props2","formToggle","tempToggle","formCls","Form","onSubmit","Input","name","innerRef","onChange","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","color","getUnitString","DropdownMenu","DropdownItem","onClick","Button","outline","aria-hidden","connect","state","weatherForm","Weather","currentWeatherLoading","cancel","forecastLoading","document","body","querySelector","src_components_WeatherForm","WeatherDisplay_WeatherDisplay","assign","WeatherTable_WeatherTable","objectSpread","currentWeather","todoBaseUrl","listTodos","filterMode","arguments","length","undefined","project","createTodo","text","date","accomplishTodo","projectBaseUrl","listProjects","addProject","removeProject","delete","inputDanger","danger","loading","hasGotProjects","listProjectsFromApi","projectList","endListProjects","selectProject","listTodosFromApi","todos","endListTodos","removeTodo","removeTodoFromApi","selectProjectAndList","newProjectInput","newProjectInputDanger","ProjectItem","handleDropdownSelect","handleRemove","removeProjectFromApi","targetProject","ProjectSelecter","handleProjectToggle","addingProject","handleCancelAddProject","handleNewProjectToggle","handleAddProject","alert","addProjectFromApi","_this$props3","_this$props4","projectToggle","projectMenu","src_components_ProjectItem","_id","placeholder","class","TodoForm","handlePost","createTodoFromApi","handleDateChange","Alert","react_datepicker_es","customInput","readOnly","selected","minDate","dateFormat","todoForm","TodoItem","handleCheckboxCheck","accomplishTodoFromApi","doneTs","thisYear","getFullYear","dueDateYear","moment","calendar","TodoList","children","ListGroupItem","t","action","src_components_TodoItem","ListGroup","Todos","toggleAll","toggleActive","toggleComleted","todoLoading","src_components_ProjectSelecter","ButtonGroup","size","src_components_TodoForm","src_components_TodoList","todo","Main","src_containers_Weather","src_containers_Todos","initLocation","initCurrentWeatherState","NaN","initWeatherFormState","getInitForecastState","initTodoFormState","initTodoState","initFilterMode","initProjectState","window","onload","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","ReactDOM","render","react_redux_es","src_containers_Main","getElementById"],"mappings":"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","file":"static/js/main.f16e710c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './WeatherDisplay.css';\n\nexport default class WeatherDisplay extends React.Component {\n    static propTypes = {\n        masking: PropTypes.bool,\n        group: PropTypes.string,\n        description: PropTypes.string,\n        temp: PropTypes.number,\n        unit: PropTypes.string\n    };\n\n    render() {\n        return (\n            <div className={`weather-display ${this.props.masking ? 'masking' : ''}`}>\n                <img src={`images/w-${this.props.group}.png`} alt='' />\n                <p className='description'>{`${this.props.day}: ${this.props.description}`}</p>\n                <h1 className='temp'>\n                    <span className='display-3'>{this.props.temp.toFixed(0)}&ordm;</span>\n                    &nbsp;{(this.props.unit === 'metric') ? 'C' : 'F'}\n                </h1>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './WeatherTable.css';\n\nexport default class WeatherTable extends React.Component {\n    static propTypes = {\n        masking: PropTypes.bool,\n        unit: PropTypes.string,\n        list: PropTypes.array\n    };\n\n    static weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    render() {\n        const { masking, list } = this.props;\n\n        return (\n            <div className={`weather-table ${masking ? 'masking' : ''}`}>\n                <div className='d-flex justify-content-around'>{\n                    list.map((el, i) => (\n                        <div key={el.ts} className={i > 2 ? 'hidden-xs-down' : ''}>\n                            <div className='day'>{\n                                WeatherTable.weekDays[(new Date(el.ts * 1000)).getDay()]\n                            }</div>\n                            <i className={`owf owf-${el.code}`}></i>\n                            <span className='weather'>\n                                <span className='max-temp'>{el.maxTemp.toFixed(0)}&ordm;</span>\n                                <span className='min-temp'>{el.minTemp.toFixed(0)}&ordm;</span>\n                            </span>\n                        </div>\n                    ))\n                }</div>\n            </div>\n        );\n    }\n}\n","import axios from 'axios';\n\nconst key = '36978c6550efee0e27e50850cc57adda';\n\nexport const getWeatherGroup = (code) => {\n    let group = 'na';\n    if (200 <= code && code < 300) {\n        group = 'thunderstorm';\n    } else if (300 <= code && code < 400) {\n        group = 'drizzle';\n    } else if (500 <= code && code < 600) {\n        group = 'rain';\n    } else if (600 <= code && code < 700) {\n        group = 'snow';\n    } else if (700 <= code && code < 800) {\n        group = 'atmosphere';\n    } else if (800 === code) {\n        group = 'clear';\n    } else if (801 <= code && code < 900) {\n        group = 'clouds';\n    }\n    return group;\n}\n\nexport const capitalize = (string) => {\n    return string.replace(/\\b\\w/g, l => l.toUpperCase());\n}\n\n\n\n\nconst currentWeatherBaseUrl = `http://api.openweathermap.org/data/2.5/weather?appid=${key}`;\nlet currentWeatherSource = axios.CancelToken.source();\n\nexport const getCurrentWeather = (pos, unit) => {\n    var url = `${currentWeatherBaseUrl}&lat=${pos.lat}&lon=${pos.lon}&units=${unit}`;\n\n    console.log(`Making request to: ${url}`);\n\n    return axios.get(url, { cancelToken: currentWeatherSource.token }).then(function (res) {\n        if (res.data.cod && res.data.message)\n            throw new Error(res.data.message);\n\n        return {\n            code: res.data.weather[0].id,\n            group: getWeatherGroup(res.data.weather[0].id),\n            description: res.data.weather[0].description,\n            temp: res.data.main.temp,\n            unit: unit\n        };\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport function cancelCurrntWeather() {\n    currentWeatherSource.cancel('Current weather request canceled');\n}\n\n\n\n\nconst forecastBaseUrl = `http://api.openweathermap.org/data/2.5/forecast/daily?appid=${key}&cnt=6`;\nlet forecastSource = axios.CancelToken.source();\n\nexport const getForecast = (pos, unit) => {\n    var url = `${forecastBaseUrl}&lat=${pos.lat}&lon=${pos.lon}&units=${unit}`;\n\n    console.log(`Making request to: ${url}`);\n\n    return axios.get(url, { cancelToken: forecastSource.token }).then(function (res) {\n        if (Number(res.data.cod) !== 200)\n            throw new Error(res.data.message);\n\n        const list = res.data.list.map(forecast => {\n            return {\n                ts: forecast.dt,\n                code: forecast.weather[0].id,\n                group: getWeatherGroup(forecast.weather[0].id),\n                description: forecast.weather[0].main,\n                maxTemp: forecast.temp.max,\n                minTemp: forecast.temp.min,\n            };\n        });\n        list.shift(); // remove today\n\n        return {\n            unit: unit,\n            list\n        };\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport const cancelForecast = () => {\n    forecastSource.cancel('Forecast request canceled');\n}\n","import axios from 'axios';\n\nconst key = 'AIzaSyDrQpacyuBhAAB5TFobrhKWyk7rugcEOfw';\n\nconst geoCodingBaseUrl = `https://maps.googleapis.com/maps/api/geocode/json?key=${key}`;\nlet geoCodingSource = axios.CancelToken.source();\n\nconst geoLocationBaseUrl = `https://www.googleapis.com/geolocation/v1/geolocate?key=${key}`;\nlet geoLocationSource = axios.CancelToken.source();\n\nexport const locationToAddress = (pos) => {\n    let url = `${geoCodingBaseUrl}&latlng=${pos.lat},${pos.lon}&result_type=administrative_area_level_1`;\n\n    console.log(`Making request to ${url}`);\n\n    return axios.get(url, { cancelToken: geoCodingSource.token }).then(function (res) {\n        if (res.data.error_message)\n            throw new Error(res.data.error_message);\n\n        return res.data.results[0].formatted_address;\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport const searchAddress = (inputAddress) => {\n    let url = `${geoCodingBaseUrl}&address=${inputAddress}`;\n\n    console.log(`Making request to ${url}`);\n\n    return axios.get(url, { cancelToken: geoCodingSource.token }).then(function (res) {\n        if (res.data.error_message)\n            throw new Error(res.data.error_message);\n\n        if (res.data.status === \"ZERO_RESULTS\")\n            throw new Error(`There's no result for ${inputAddress}`);\n\n        return {\n            pos: {\n                lat: res.data.results[0].geometry.location.lat,\n                lon: res.data.results[0].geometry.location.lng,\n            },\n            address: res.data.results[0].formatted_address,\n        };\n    }).catch(function (err) {\n        if (axios.isCancel(err)) {\n            console.error(err.message, err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport const getCurrentLocation = (getState) => {\n\n    let url = geoLocationBaseUrl;\n\n    console.log(`Making Post request to ${url}`);\n\n    return axios.post(url, { cancelToken: geoLocationSource.token }).then(function (res) {\n        return {\n            lat: res.data.location.lat,\n            lon: res.data.location.lng\n        };\n    }).catch(function (err) {\n        console.log(err);\n        return getState().location;\n    });\n}","import {\n    getCurrentWeather as getCurrentWeatherFromApi,\n    getForecast as getForecastFromApi,\n} from '../api/open-weather-map.js';\n\nimport {\n    getCurrentLocation as getCurrentLocationFromApi,\n    locationToAddress as locationToAddressFromApi,\n    searchAddress as searchAddressFromApi\n} from '../api/location'\n\n\n/* Unit */\n\nconst setUnit = (unit) => {\n    return {\n        type: '@UNIT/SET_UNIT',\n        unit: unit\n    };\n}\n\n/* Address */\n\nconst setAddress = (address) => {\n    return {\n        type: '@ADDRESS/SET_ADDRESS',\n        address: address\n    }\n}\n\n/* Location */\n\nconst setLocation = (location) => {\n    return {\n        type: '@LOACTION/SET_LOCATION',\n        location: location\n    }\n}\n\n/* Masking */\n\nconst maskBg = () => {\n    return {\n        type: '@MASKING/MASK_BG'\n    }\n}\n\nconst unmaskBg = () => {\n    return {\n        type: '@MASKING/UNMASK_BG'\n    }\n}\n\n/* Current Weather */\n\nconst startGetCurrentWeather = () => {\n    return {\n        type: '@CURRENT_WEATHER/START_GET_CURRENT_WEATHER',\n    };\n}\n\nconst endGetCurrentWeather = (code, group, description, temp) => {\n    return {\n        type: '@CURRENT_WEATHER/END_GET_CURRENT_WEATHER',\n        code,\n        group,\n        description,\n        temp,\n    };\n}\n\nconst resetCurrentWeather = () => {\n    return {\n        type: '@CURRENT_WEATHER/RESET_CURRENT_WEATHER'\n    };\n}\n\n\n/* WeatherForm */\n\nexport const toggleForm = () => {\n    return {\n        type: '@WEATHER_FORM/TOGGLE_FORM'\n    };\n}\n\nexport const input = (value) => {\n    return {\n        type: '@WEATHER_FORM/INPUT',\n        value\n    };\n}\n\nexport const toggleTemp = () => {\n    return {\n        type: '@WEATHER_FORM/TOGGLE_TEMP'\n    };\n}\n\nexport const selectUnit = (unit) => {\n    return {\n        type: '@WEATHER_FORM/SELECT_UNIT',\n        unit\n    };\n}\n\n/* Forecast */\n\nconst startGetForecast = () => {\n    return {\n        type: '@FORECAST/START_GET_FORECAST',\n    };\n}\n\nconst endGetForecast = (list) => {\n    return {\n        type: '@FORECAST/END_GET_FORECAST',\n        list\n    };\n}\n\nconst resetForecast = () => {\n    return {\n        type: '@FORECAST/RESET_FORECAST'\n    };\n}\n\n\n\n/* Weather */\n\nexport const getWeather = (inputAddress, unit) => {\n    return (dispatch, getState) => {\n\n        dispatch(maskBg());\n\n        const getLocation = checkInput(inputAddress, getState).then(inputAddress => {\n            return searchAddressFromApi(inputAddress);\n        }).then(addressInfo => {\n            const { pos, address } = addressInfo;\n            dispatch(setAddress(address));\n            dispatch(setLocation(pos));\n            return pos;\n        });\n\n        const getCurrentWeather = getLocation.then(pos => {\n            dispatch(startGetCurrentWeather());\n            return getCurrentWeatherFromApi(pos, unit);\n        }).then(weather => {\n            const { code, group, description, temp } = weather;\n            dispatch(endGetCurrentWeather(code, group, description, temp));\n        }).catch(err => {\n            console.error('Error getting current weather', err);\n            dispatch(resetCurrentWeather());\n            dispatch(unmaskBg());\n        });\n\n        const getForecast = getLocation.then(pos => {\n            dispatch(startGetForecast());\n            return getForecastFromApi(pos, unit);\n        }).then(forecast => {\n            const { list } = forecast;\n            dispatch(endGetForecast(list));\n        }).catch(err => {\n            console.error('Error getting forecast', err);\n            dispatch(resetForecast());\n            dispatch(unmaskBg());\n        });\n\n        return Promise.all([getCurrentWeather, getForecast]).then(() => {\n            dispatch(setUnit(unit));\n            dispatch(unmaskBg());\n        });\n    }\n}\n\nconst checkInput = (inputAddress, getState) => {\n    return new Promise((resolve, reject) => {\n        let hasAddress = inputAddress !== '' ? true : false;\n\n        if (!hasAddress) {\n            getCurrentLocationFromApi(getState).then(currentLocation => {\n                return locationToAddressFromApi(currentLocation);\n            }).then(address => {\n                resolve(address);\n            });\n        }\n        else\n            resolve(inputAddress);\n    });\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Form,\n    Input,\n    Button,\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { toggleForm, input, toggleTemp, selectUnit } from '../states/weather-actions.js';\n\nimport './WeatherForm.css';\n\nclass WeatherForm extends React.Component {\n    static propTypes = {\n        inputValue: PropTypes.string,\n        formToggle: PropTypes.bool,\n        tempToggle: PropTypes.bool,\n        unit: PropTypes.string,\n        address: PropTypes.string,\n        defaultUnit: PropTypes.string,\n        submitAction: PropTypes.func,\n        dispatch: PropTypes.func\n    };\n\n    static getUnitString(unit) {\n        return unit === 'metric' ? 'C' : 'F';\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.inputEl = null;\n    }\n\n    componentDidMount() {\n        this.props.dispatch(selectUnit(this.props.defaultUnit));\n    }\n\n    render() {\n        const { inputValue, formToggle, tempToggle, unit, address } = this.props;\n        const formCls = formToggle ? 'form' : '';\n\n        return (\n            <div className={`weather-form ${formCls}`}>{formToggle ?\n                <Form className='form-inline justify-content-center' onSubmit={this.handleSubmit}>\n                    <Input type='text' name='address' innerRef={el => { this.inputEl = el }} value={inputValue} onChange={this.handleInputChange}></Input>&nbsp;\n                    <ButtonDropdown type='buttom' isOpen={tempToggle} toggle={this.handleTempToggle}>\n                        <DropdownToggle type='button' caret color=\"secondary\">\n                            &ordm; {WeatherForm.getUnitString(unit)}\n                        </DropdownToggle>\n                        <DropdownMenu>\n                            <DropdownItem type='button' onClick={this.handleMetricUnit}>&ordm; C</DropdownItem>\n                            <DropdownItem type='button' onClick={this.handleImperialUnit}>&ordm; F</DropdownItem>\n                        </DropdownMenu>\n                    </ButtonDropdown>&nbsp;\n                    <Button color=\"info\">Check</Button>\n                </Form> :\n                <Button className='btn-form' outline color=\"light\" onClick={this.handleFormToggle}><i className='fa fa-map-marker' aria-hidden=\"true\"></i>&nbsp;&nbsp;{address}</Button>\n            }</div>\n        );\n    }\n\n    handleFormToggle = () => {\n        this.props.dispatch(toggleForm());\n    }\n\n    handleInputChange = (e) => {\n        this.props.dispatch(input(e.target.value));\n    }\n\n    handleMetricUnit = (e) => {\n        this.props.dispatch(selectUnit('metric'));\n    }\n\n    handleImperialUnit = (e) => {\n        this.props.dispatch(selectUnit('imperial'));\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.inputEl.blur();\n        const { inputValue, address, unit, dispatch } = this.props;\n        if (inputValue && inputValue.trim()) {\n            dispatch(this.props.submitAction(inputValue, unit));\n            this.handleFormToggle();\n        } else {\n            dispatch(input(address));\n        }\n    }\n\n    handleTempToggle = (e) => {\n        this.props.dispatch(toggleTemp());\n    }\n}\n\nexport default connect(state => state.weatherForm)(WeatherForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport WeatherDisplay from '../components/WeatherDisplay';\nimport WeatherTable from '../components/WeatherTable';\nimport WeatherForm from '../components/WeatherForm';\nimport { getWeather } from '../states/weather-actions';\nimport { cancelCurrntWeather, cancelForecast } from '../api/open-weather-map.js';\n\nimport './Weather.css';\n\nclass Weather extends React.Component {\n    static propTypes = {\n        inputValue: PropTypes.string,\n        address: PropTypes.string,\n        unit: PropTypes.string,\n        masking: PropTypes.bool,\n        dispatch: PropTypes.func,\n\n        list: PropTypes.array,\n        forecastLoading: PropTypes.bool,\n\n        code: PropTypes.number,\n        group: PropTypes.string,\n        description: PropTypes.string,\n        temp: PropTypes.number,\n        currentWeatherLoading: PropTypes.bool,\n    };\n\n    componentDidMount() {\n        this.props.dispatch(getWeather(this.props.inputValue, this.props.unit));\n    }\n\n    componentWillUnmount() {\n        if (this.props.currentWeatherLoading) {\n            cancelCurrntWeather();\n        };\n\n        if (this.props.forecastLoading) {\n            cancelForecast();\n        };\n    }\n\n    render() {\n        const { address, group, description, temp, list, unit, masking } = this.props;\n        const forecast = list;\n\n        document.body.className = `weather-bg ${group}`;\n        document.querySelector('.weather-bg .mask').className = `mask ${masking ? 'masking' : ''}`;\n\n        return (\n            <div className='weather'>\n                <div className='current'>\n                    <WeatherForm address={address} defaultUnit={unit} submitAction={getWeather} />\n                    <WeatherDisplay {...{ group, description, temp, unit, masking }} day='today' />\n                </div>\n                <div className='forecast'>\n                    <WeatherTable list={forecast} unit={unit} masking={masking} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({\n    ...state.currentWeather,\n    ...state.forecast,\n    inputValue: state.weatherForm.inputValue,\n    unit: state.unit,\n    address: state.address,\n    masking: state.masking,\n}))(Weather);\n","import axios from 'axios';\n\n// Develop server URL\n// const todoBaseUrl = 'http://localhost:3000/api/todos';\n\n// Staging server URL\nconst todoBaseUrl = 'http://weathernote-server-dev.us-west-2.elasticbeanstalk.com/api/todos';\n\nexport const listTodos = (filterMode = 'all', project) => {\n    let url = `${todoBaseUrl}?`;\n\n    if (filterMode === 'active')\n        url += 'mode=active';\n    else if (filterMode === 'completed')\n        url += 'mode=completed';\n    else\n        url += 'mode=all';\n\n    url += `&project=${project}`\n\n    console.log(`Making GET request to: ${url}`);\n\n    return axios.get(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\n\nexport const createTodo = (text, date, project) => {\n    let url = todoBaseUrl;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url, { text, date, project }).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\n\nexport const accomplishTodo = (id) => {\n    let url = `${todoBaseUrl}/${id}`;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\n\nexport const removeTodo = (id) => {\n    let url = `${todoBaseUrl}/${id}`;\n\n    console.log(`Making DELETE request to: ${url}`);\n\n    return axios.delete(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n","import axios from 'axios';\n\n// Develop server URL\n// const projectBaseUrl = 'http://localhost:3000/api/projects';\n\n// Staging server URL\nconst projectBaseUrl = 'http://weathernote-server-dev.us-west-2.elasticbeanstalk.com/api/projects';\n\nexport const listProjects = () => {\n    let url = `${projectBaseUrl}`;\n\n    console.log(`Making GET request to: ${url}`);\n\n    return axios.get(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\nexport const addProject = (name) => {\n    let url = projectBaseUrl;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url, { name }).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\nexport const removeProject = (name) => {\n    let url = `${projectBaseUrl}/${name}`;\n\n    console.log(`Making DELETE request to: ${url}`);\n\n    return axios.delete(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n","import {\n    listTodos as listTodosFromApi,\n    createTodo as createTodoFromApi,\n    accomplishTodo as accomplishTodoFromApi,\n    removeTodo as removeTodoFromApi\n} from '../api/todos.js';\n\nimport {\n    listProjects as listProjectsFromApi,\n    addProject as addProjectFromApi,\n    removeProject as removeProjectFromApi,\n} from '../api/projects.js'\n\n/*  Todo Form */\n\nexport function input(value) {\n    return {\n        type: '@TODO_FORM/INPUT',\n        value\n    };\n};\n\nexport function inputDanger(danger) {\n    return {\n        type: '@TODO_FORM/INPUT_DANGER',\n        danger\n    };\n};\n\nexport function setDate(date) {\n    return {\n        type: '@TODO_FORM/SET_DATE',\n        date,\n    };\n}\n\n/*  Todos */\n\nfunction startLoading() {\n    return {\n        type: '@TODO/START_LOADING'\n    };\n}\n\nfunction endLoading() {\n    return {\n        type: '@TODO/END_LOADING'\n    };\n}\n\nfunction endListTodos(todos) {\n    return {\n        type: '@TODO/END_LIST_TODOS',\n        todos\n    };\n}\n\nexport function listTodos(loading = false) {\n    return (dispatch, getState) => {\n        if (!loading)\n            dispatch(startLoading());\n\n        let p;\n\n        if (getState().project.hasGotProjects === false) {\n            p = listProjectsFromApi().then(projectList => {\n                dispatch(endListProjects(projectList));\n\n                if (projectList.length !== 0)\n                    dispatch(selectProject(projectList[0].name));\n                else\n                    dispatch(selectProject(''));\n\n                dispatch(hasGotProjects());\n            });\n        }\n        else {\n            p = new Promise((resolve, reject) => {\n                resolve();\n            });\n        }\n\n        return p.then(() => {\n            return listTodosFromApi(getState().filterMode, getState().project.name)\n        }).then(todos => {\n            dispatch(endListTodos(todos));\n        }).catch(err => {\n            console.error('Error listing todos', err);\n        }).then(() => {\n            dispatch(endLoading());\n        });\n    }\n}\n\nexport function createTodo(text, date) {\n    return (dispatch, getState) => {\n        dispatch(startLoading());\n\n        return createTodoFromApi(text, date, getState().project.name).then(() => {\n            dispatch(listTodos(true));\n        }).catch(err => {\n            console.error('Error creating todos', err);\n            dispatch(listTodos(true));\n        });\n    };\n};\n\nexport function accomplishTodo(id) {\n    return (dispatch) => {\n        dispatch(startLoading(true));\n\n        return accomplishTodoFromApi(id).then(() => {\n            dispatch(listTodos(true));\n        }).catch(err => {\n            console.error('Error accomplishing todos', err);\n            dispatch(listTodos(true));\n        });\n    }\n}\n\nexport const removeTodo = (id) => {\n    return (dispatch) => {\n        dispatch(startLoading(true));\n\n        return removeTodoFromApi(id).then(() => {\n            dispatch(listTodos(true));\n        }).catch(err => {\n            console.error('Error removing todos', err);\n            dispatch(listTodos(true));\n        });\n    }\n}\n\n/* Filter */\n\nfunction toggleAll() {\n    return {\n        type: '@FILTER/TOGGLE_ALL'\n    };\n}\n\nexport function toggleAllAndList() {\n    return (dispatch) => {\n        dispatch(toggleAll());\n        return dispatch(listTodos());\n    }\n}\n\nfunction toggleActive() {\n    return {\n        type: '@FILTER/TOGGLE_ACTIVE'\n    };\n}\n\nexport function toggleActiveAndList() {\n    return (dispatch) => {\n        dispatch(toggleActive());\n        return dispatch(listTodos());\n    }\n}\n\nfunction toggleComleted() {\n    return {\n        type: '@FILTER/TOGGLE_COMPLETED'\n    };\n}\n\nexport function toggleComletedAndList() {\n    return (dispatch) => {\n        dispatch(toggleComleted());\n        return dispatch(listTodos());\n    }\n}\n\n\n/* Project */\n\nexport function toggleProject() {\n    return {\n        type: '@PROJECT/TOGGLE_PROJECT'\n    }\n}\n\nfunction selectProject(project) {\n    return {\n        type: '@PROJECT/SELECT_PROJECT',\n        project\n    }\n}\n\nexport function selectProjectAndList(project) {\n    return (dispatch) => {\n        dispatch(selectProject(project));\n        dispatch(toggleProject());\n        return dispatch(listTodos());\n    }\n}\n\nfunction endListProjects(projectList) {\n    return {\n        type: '@PROJECT/END_LIST_PROJECTS',\n        projectList\n    };\n}\n\nexport function startAddProject() {\n    return {\n        type: '@PROJECT/START_ADD_PROJECT',\n    }\n}\n\nexport function finishAddProject() {\n    return {\n        type: '@PROJECT/FINISH_ADD_PROJECT',\n    };\n}\n\nexport function addProject(inputValue) {\n    return (dispatch, getState) => {\n        dispatch(startLoading());\n\n        return addProjectFromApi(inputValue).then(() => {\n            return listProjectsFromApi()\n        }).then(projectList => {\n            dispatch(endListProjects(projectList));\n            dispatch(selectProjectAndList(inputValue));\n        }).catch(err => {\n            console.error('Error adding project', err);\n            dispatch(selectProjectAndList(''));\n        });\n    };\n}\n\nexport function removeProject(name) {\n    return (dispatch, getState) => {\n        dispatch(startLoading());\n\n        return removeProjectFromApi(name).then(() => {\n            return listProjectsFromApi()\n        }).then(projectList => {\n            dispatch(endListProjects(projectList));\n\n            let targetProject;\n\n            if (getState().project.name === name || projectList.length === 0)\n                targetProject = '';\n            else\n                targetProject = getState().project.name;\n\n            dispatch(selectProjectAndList(targetProject));\n        }).catch(err => {\n            console.error('Error adding project', err);\n            dispatch(selectProjectAndList(''));\n        });\n    };\n}\n\nexport function newProjectInput(value) {\n    return {\n        type: '@PROJECT/INPUT',\n        value\n    };\n}\n\nexport function newProjectInputDanger(danger) {\n    return {\n        type: '@PROJECT/INPUT_DANGER',\n        danger\n    };\n}\n\nfunction hasGotProjects() {\n    return {\n        type: '@PROJECT/HAS_GOT_PROJECTS'\n    };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { removeProject, selectProjectAndList } from '../states/todo-actions.js';\n\nimport './ProjectItem.css';\n\nclass ProjectItem extends React.Component {\n    static propTypes = {\n        name: PropTypes.string,\n        dispatch: PropTypes.func\n    };\n\n    render() {\n        const { name } = this.props;\n        return (\n            <div className='project-item d-flex flex-row'>\n                <div className='project-name flex-grow-1' onClick={() => { this.handleDropdownSelect(name) }}>\n                    <i className=\"fas fa-circle\"></i>\n                    {name}\n                </div>\n                <div className='remove align-self-center'>\n                    <i className=\"far fa-trash-alt\" onClick={this.handleRemove}></i>\n                </div>\n            </div>\n        )\n    }\n\n    handleDropdownSelect = (project) => {\n        this.props.dispatch(selectProjectAndList(project));\n    }\n\n    handleRemove = () => {\n        this.props.dispatch(removeProject(this.props.name));\n    }\n}\n\nexport default connect()(ProjectItem);\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n} from 'reactstrap';\n\nimport {\n    toggleProject,\n    addProject,\n    startAddProject,\n    finishAddProject,\n    newProjectInput,\n    newProjectInputDanger,\n} from '../states/todo-actions.js';\n\nimport ProjectItem from './ProjectItem.js';\nimport './ProjectSelecter.css'\n\nclass ProjectSelecter extends React.Component {\n    static propTypes = {\n        projectToggle: PropTypes.bool,\n        name: PropTypes.string,\n        projectList: PropTypes.array,\n        addingProject: PropTypes.bool,\n        inputValue: PropTypes.string,\n        dispatch: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.inputEl = null;\n    };\n\n    render() {\n        const { projectToggle, projectList, name, addingProject, inputValue } = this.props;\n\n        const projectMenu = projectList.map(e => {\n            return <ProjectItem id={e._id} name={e.name} />\n        });\n\n        return (\n            <div className='project align-self-start'>\n                <ButtonDropdown type='buttom' isOpen={projectToggle} toggle={this.handleProjectToggle}>\n                    <DropdownToggle className='project-toggle' type='button' caret color=\"light\">\n                        {name !== '' ? name : 'Choose a project'}\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        {projectMenu}\n                        {addingProject ?\n                            <div className='add-project'>\n                                <input type='text'\n                                    className='form-control no-border'\n                                    placeholder='Name your project'\n                                    innerRef={el => { this.inputEl = el }}\n                                    value={inputValue}\n                                    onChange={this.handleInputChange} />\n                                <div className='add-or-cancel'>\n                                    <button type=\"button\" class=\"btn btn-info btn-sm mb-0 ml-1 mt-2\" onClick={this.handleAddProject}>Add</button>\n                                    <button type=\"button\" class=\"btn btn-info btn-sm mb-0 ml-1 mt-2\" onClick={this.handleCancelAddProject}>Cancel</button>\n                                </div>\n                            </div> :\n                            <div className='last-item d-flex flex-row'>\n                                <div className='new-project flex-grow-1' onClick={this.handleNewProjectToggle}>\n                                    <i className=\"fas fa-plus\"></i>\n                                    Add project\n                                </div>\n                                <div className='remove align-self-center'>\n                                    <i className=\"far fa-times-circle\"></i>\n                                </div>\n                            </div>}\n                    </DropdownMenu>\n                </ButtonDropdown>\n            </div>\n        )\n    }\n\n    handleProjectToggle = (e) => {\n        const { addingProject, dispatch } = this.props;\n\n        if (addingProject)\n            this.handleCancelAddProject();\n\n        dispatch(toggleProject());\n    }\n\n    handleInputChange = (e) => {\n        const text = e.target.value\n        this.props.dispatch(newProjectInput(text));\n        if (text && this.props.inputDanger) {\n            this.props.dispatch(newProjectInputDanger(false));\n        }\n    }\n\n    handleNewProjectToggle = () => {\n        this.props.dispatch(startAddProject());\n    }\n\n    handleAddProject = () => {\n        const { inputValue, dispatch, projectList } = this.props;\n\n        if (!inputValue) {\n            dispatch(newProjectInputDanger(true));\n            return;\n        }\n\n        for (let i = 0; i < projectList.length; i++) {\n            if (projectList[i].name === inputValue) {\n                alert(`${inputValue} has been created.`);\n                return;\n            }\n        }\n\n        dispatch(addProject(inputValue));\n        dispatch(newProjectInput(''));\n    }\n\n    handleCancelAddProject = () => {\n        const { inputValue, dispatch } = this.props;\n\n        if (inputValue !== '')\n            dispatch(newProjectInput(''));\n\n        dispatch(finishAddProject());\n    }\n}\n\nexport default connect(state => ({\n    ...state.project\n}))(ProjectSelecter)","import React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport PropTypes from 'prop-types';\nimport {\n    Alert,\n    Input,\n    Button,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { createTodo, input, inputDanger, setDate } from '../states/todo-actions.js';\n\nimport './TodoForm.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass TodoForm extends React.Component {\n    static propTypes = {\n        inputValue: PropTypes.string,\n        inputDanger: PropTypes.bool,\n        date: PropTypes.instanceOf(Date),\n        project: PropTypes.string,\n        dispatch: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.inputEl = null;\n    };\n\n    render() {\n        const { inputValue, date } = this.props;\n        const inputDanger = this.props.inputDanger ? 'has-danger' : '';\n\n        const CustomInput = (props) => {\n            return (\n                <input\n                    className='datepicker'\n                    onClick={props.onClick}\n                    value={props.value}\n                    type=\"text\"\n                    readOnly={true}\n                />\n            )\n        }\n\n        return (\n            <div className='post-form'>\n                <Alert color='info' className={`d-flex flex-row justify-content-center ${inputDanger}`}>\n                    <DatePicker\n                        customInput={<CustomInput />}\n                        selected={date}\n                        onChange={this.handleDateChange}\n                        minDate={new Date()}\n                        dateFormat='yyyy/MM/dd'\n                    />\n                    <Input className='input'\n                        type='textarea'\n                        innerRef={el => { this.inputEl = el }}\n                        value={inputValue}\n                        onChange={this.handleInputChange}\n                        placeholder=\"What's next to do?\" />\n                    <Button className='btn-post align-self-end mb-0 h-100' color=\"info\" onClick={this.handlePost}>Add</Button>\n                </Alert>\n            </div>\n        );\n    }\n\n    handleInputChange = (e) => {\n        const text = e.target.value\n        this.props.dispatch(input(text));\n        if (text && this.props.inputDanger) {\n            this.props.dispatch(inputDanger(false));\n        }\n    }\n\n    handlePost = () => {\n        const { inputValue, dispatch, project, date } = this.props;\n\n        if (!inputValue) {\n            dispatch(inputDanger(true));\n            return;\n        }\n\n        if (project === '') {\n            alert('Please choose a project.');\n            return;\n        }\n\n        dispatch(createTodo(inputValue, date));\n        dispatch(input(''));\n    }\n\n    handleDateChange = (e) => {\n        this.props.dispatch(setDate(e));\n    }\n}\n\nexport default connect(state => ({\n    ...state.todoForm,\n    project: state.project.name,\n}))(TodoForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport dateFormat from 'dateformat';\n\nimport { accomplishTodo, removeTodo } from '../states/todo-actions';\n\nimport './TodoItem.css';\n\nclass TodoItem extends React.Component {\n    static propTypes = {\n        id: PropTypes.string,\n        text: PropTypes.string,\n        date: PropTypes.instanceOf(Date),\n        ts: PropTypes.number,\n        doneTs: PropTypes.number,\n        project: PropTypes.string,\n        dispatch: PropTypes.func\n    };\n\n    render() {\n        const { text, date, ts, doneTs } = this.props;\n        const thisYear = (new Date()).getFullYear();\n        const dueDateYear = (new Date(date)).getFullYear();\n\n        return (\n            <div className={'todo-item d-flex flex-row ' + (doneTs ? 'done' : 'undone')}>\n                <div className='date'>\n                    {thisYear === dueDateYear ?\n                        dateFormat(date, 'mmm d') :\n                        dateFormat(date, 'yyyy\\nmmm d')}\n                </div>\n                <div className='todo d-flex flex-column'>\n                    <div className='d-flex flex-row'>\n                        <div className='wrap'>\n                            <div className='ts'>{'Created: ' + moment(ts * 1000).calendar()}</div>\n                            <div className='text'>{text}</div>\n                        </div>\n                        <div className='remove align-self-start' onClick={this.handleRemove}>\n                            <i class=\"fas fa-trash-alt\"></i>\n                        </div>\n                    </div>\n                    <div className='check d-flex justify-content-end align-items-center'>\n                        <div className='done-ts'>{\n                            !!doneTs &&\n                            <span>{moment(doneTs * 1000).calendar()}</span>\n                        }</div>\n                        <div className='checkbox' onClick={this.handleCheckboxCheck}>\n                            <i className={'far ' + (doneTs ? 'fa-check-square' : 'fa-square')}></i>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    handleCheckboxCheck = (e) => {\n        this.props.dispatch(accomplishTodo(this.props.id));\n\n    }\n\n    handleRemove = (e) => {\n        this.props.dispatch(removeTodo(this.props.id));\n    }\n}\n\nexport default connect()(TodoItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    ListGroup,\n    ListGroupItem\n} from 'reactstrap';\n\nimport TodoItem from './TodoItem';\nimport './TodoList.css';\n\nclass TodoList extends React.Component {\n    static propTypes = {\n        todos: PropTypes.array,\n    };\n\n    render() {\n        const { todos } = this.props;\n\n        let children = (\n            <ListGroupItem className='empty d-flex justify-content-center align-items-center'>\n                <div className='empty-text'>There are no other todos.</div>\n            </ListGroupItem>\n        );\n        if (todos.length) {\n            children = todos.map(t => (\n                <ListGroupItem key={t.id} action={true}>\n                    <TodoItem {...t} />\n                </ListGroupItem>\n            ));\n        }\n\n        return (\n            <div className='todo-list'>\n                <ListGroup>{children}</ListGroup>\n            </div>\n        );\n    }\n}\n\nexport default connect()(TodoList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, ButtonGroup } from 'reactstrap';\n\nimport ProjectSelecter from '../components/ProjectSelecter';\nimport TodoForm from '../components/TodoForm';\nimport TodoList from '../components/TodoList';\n\nimport {\n    listTodos,\n    toggleAllAndList,\n    toggleActiveAndList,\n    toggleComletedAndList\n} from '../states/todo-actions.js';\n\nimport './Todos.css';\n\nclass Todos extends React.Component {\n    static propTypes = {\n        todoLoading: PropTypes.bool,\n        todos: PropTypes.array,\n        filterMode: PropTypes.string,\n        dispatch: PropTypes.func,\n    };\n\n    componentDidMount() {\n        this.props.dispatch(listTodos());\n    }\n\n    render() {\n        const { todoLoading, todos, filterMode } = this.props;\n\n        return (\n            <div className='todos d-flex flex-column'>\n                <div className='d-flex justify-content-between'>\n                    <ProjectSelecter />\n                    <ButtonGroup size='sm'>\n                        <Button outline={filterMode === 'all' ? false : true} color='light' onClick={this.toggleAll}>All</Button>\n                        <Button outline={filterMode === 'active' ? false : true} color='light' onClick={this.toggleActive}>Active</Button>\n                        <Button outline={filterMode === 'completed' ? false : true} color='light' onClick={this.toggleComleted}>Completed</Button>\n                    </ButtonGroup>\n                </div>\n                <TodoForm />\n                <TodoList todos={todos} />{\n                    todoLoading &&\n                    <i className=\"fas fa-spinner fa-spin loading\"></i>\n                }\n            </div>\n        );\n    }\n\n    toggleAll = () => {\n        this.props.dispatch(toggleAllAndList());\n    }\n\n    toggleActive = () => {\n        this.props.dispatch(toggleActiveAndList());\n    }\n\n    toggleComleted = () => {\n        this.props.dispatch(toggleComletedAndList());\n    }\n}\n\nexport default connect(state => ({\n    ...state.todo,\n    filterMode: state.filterMode,\n}))(Todos);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Weather from './Weather';\nimport Todos from './Todos';\n\nimport './Main.css';\n\nclass Main extends React.Component {\n    static propTypes = {\n        store: PropTypes.object,\n        dispatch: PropTypes.func\n    };\n\n    render() {\n        return (\n            <div className='main'>\n                <Weather />\n                <Todos />\n            </div>\n        );\n    }\n}\n\nexport default connect()(Main);\n","const initUnitState = 'metric';\n\nexport const unit = (state = initUnitState, action) => {\n    switch (action.type) {\n        case '@UNIT/SET_UNIT':\n            return action.unit;\n        default:\n            return state;\n    }\n}\n\nconst initAddress = '';\n\nexport const address = (state = initAddress, action) => {\n    switch (action.type) {\n        case '@ADDRESS/SET_ADDRESS':\n            return action.address;\n        default:\n            return state;\n    }\n}\n\n\nconst initLocation = {\n    lat: 25.0173405,\n    lon: 121.5397518\n};\n\nexport const location = (state = initLocation, action) => {\n    switch (action.type) {\n        case '@LOACTION/SET_LOCATION':\n            return action.location;\n        default:\n            return state;\n    }\n}\n\n\nconst initMaskingState = false;\n\nexport const masking = (state = initMaskingState, action) => {\n    switch (action.type) {\n        case '@MASKING/MASK_BG':\n            return true;\n        case '@MASKING/UNMASK_BG':\n            return false;\n        default:\n            return state;\n    }\n}\n\n\nconst initCurrentWeatherState = {\n    code: -1,\n    group: 'na',\n    description: 'N/A',\n    temp: NaN,\n    currentWeatherLoading: false,\n};\n\nexport const currentWeather = (state = initCurrentWeatherState, action) => {\n    switch (action.type) {\n        case '@CURRENT_WEATHER/START_GET_CURRENT_WEATHER':\n            return {\n                ...state,\n                currentWeatherLoading: true\n            };\n        case '@CURRENT_WEATHER/END_GET_CURRENT_WEATHER':\n            return {\n                ...state,\n                code: action.code,\n                group: action.group,\n                description: action.description,\n                temp: action.temp,\n                currentWeatherLoading: false\n            };\n        case '@CURRENT_WEATHER/RESET_CURRENT_WEATHER':\n            return {\n                ...initCurrentWeatherState,\n            };\n        default:\n            return state;\n    }\n}\n\nconst initWeatherFormState = {\n    inputValue: '',\n    formToggle: false,\n    tempToggle: false,\n    unit: null,\n};\n\nexport const weatherForm = (state = initWeatherFormState, action) => {\n    switch (action.type) {\n        case '@WEATHER_FORM/TOGGLE_FORM':\n            return {\n                ...state,\n                formToggle: !state.formToggle\n            };\n        case '@WEATHER_FORM/INPUT':\n            return {\n                ...state,\n                inputValue: action.value\n            };\n        case '@WEATHER_FORM/TOGGLE_TEMP':\n            return {\n                ...state,\n                tempToggle: !state.tempToggle\n            };\n        case '@WEATHER_FORM/SELECT_UNIT':\n            return {\n                ...state,\n                unit: action.unit\n            };\n        default:\n            return state;\n    }\n}\n\nconst getInitForecastState = () => {\n    let list = [];\n    for (let i = 0; i < 5; i++) {\n        list[i] = {\n            ts: -i,\n            code: -1,\n            group: 'na',\n            description: 'N/A',\n            maxTemp: NaN,\n            minTemp: NaN,\n        };\n    }\n    return {\n        list,\n        forecastLoading: false,\n    };\n}\n\nexport const forecast = (state = getInitForecastState(), action) => {\n    switch (action.type) {\n        case '@FORECAST/START_GET_FORECAST':\n            return {\n                ...state,\n                forecastLoading: true\n            };\n        case '@FORECAST/END_GET_FORECAST':\n            return {\n                ...state,\n                list: action.list,\n                forecastLoading: false\n            };\n        case '@FORECAST/RESET_FORECAST':\n            return {\n                ...getInitForecastState(),\n            };\n        default:\n            return state;\n    }\n}\n\n","/* Todo Form */\n\nconst initTodoFormState = {\n    inputValue: '',\n    inputDanger: false,\n    date: new Date(),\n};\n\nexport function todoForm(state = initTodoFormState, action) {\n    switch (action.type) {\n        case '@TODO_FORM/INPUT':\n            return {\n                ...state,\n                inputValue: action.value\n            };\n        case '@TODO_FORM/INPUT_DANGER':\n            return {\n                ...state,\n                inputDanger: action.danger\n            };\n        case '@TODO_FORM/SET_DATE':\n            return {\n                ...state,\n                date: action.date,\n            };\n        default:\n            return state;\n    }\n}\n\n/* Todos */\n\nconst initTodoState = {\n    todoLoading: false,\n    todos: [],\n};\n\nexport function todo(state = initTodoState, action) {\n    switch (action.type) {\n        case '@TODO/START_LOADING':\n            return {\n                ...state,\n                todoLoading: true\n            };\n        case '@TODO/END_LOADING':\n            return {\n                ...state,\n                todoLoading: false\n            };\n        case '@TODO/END_LIST_TODOS':\n            return {\n                ...state,\n                todos: action.todos\n            };\n        default:\n            return state;\n    }\n}\n\n/* Filter */\n\nconst initFilterMode = 'all'\n\nexport function filterMode(state = initFilterMode, action) {\n    switch (action.type) {\n        case '@FILTER/TOGGLE_ALL':\n            return 'all';\n        case '@FILTER/TOGGLE_ACTIVE':\n            return 'active';\n        case '@FILTER/TOGGLE_COMPLETED':\n            return 'completed';\n        default:\n            return state;\n    }\n}\n\n/* Project */\n\nconst initProjectState = {\n    projectToggle: false,\n    name: '',\n    projectList: [],\n    addingProject: false,\n    inputValue: '',\n    inputDanger: false,\n    hasGotProjects: false,\n};\n\nexport function project(state = initProjectState, action) {\n    switch (action.type) {\n        case '@PROJECT/END_LIST_PROJECTS':\n            return {\n                ...state,\n                projectList: action.projectList,\n            }\n        case '@PROJECT/TOGGLE_PROJECT':\n            return {\n                ...state,\n                projectToggle: !state.projectToggle,\n            }\n        case '@PROJECT/SELECT_PROJECT':\n            return {\n                ...state,\n                name: action.project,\n            }\n        case '@PROJECT/START_ADD_PROJECT':\n            return {\n                ...state,\n                addingProject: true\n            }\n        case '@PROJECT/FINISH_ADD_PROJECT':\n            return {\n                ...state,\n                addingProject: false\n            }\n        case '@PROJECT/INPUT':\n            return {\n                ...state,\n                inputValue: action.value\n            }\n        case '@PROJECT/INPUT_DANGER':\n            return {\n                ...state,\n                inputDanger: action.danger\n            }\n        case '@PROJECT/HAS_GOT_PROJECTS':\n            return {\n                ...state,\n                hasGotProjects: true\n            }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport Main from './containers/Main';\nimport { unit, address, location, masking, currentWeather, weatherForm, forecast } from './states/weather-reducers';\nimport { todoForm, todo, filterMode, project } from './states/todo-reducers';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nwindow.onload = function () {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const store = createStore(combineReducers({\n        unit, address, location, masking,\n        currentWeather, weatherForm, forecast,\n        todoForm, todo, filterMode, project,\n    }), composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <Main />\n        </Provider>,\n        document.getElementById('root')\n    );\n};\n"],"sourceRoot":""}